2020-03-25 15:31:43 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/backStage/videoManage.jsp]
2020-03-25 15:31:43 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-25 15:31:51 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/video/get/20", parameters={}
2020-03-25 15:31:51 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.VideoController#get(Integer)
2020-03-25 15:31:51 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.get]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-25 15:31:51 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-25 15:31:51 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-25 15:31:51 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-25 15:31:51 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-25 15:31:51 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36f0558e]
2020-03-25 15:31:51 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-25 15:31:51 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and v.video_id = ? 
2020-03-25 15:31:51 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 20(Integer)
2020-03-25 15:31:51 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:31:51 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 20(Integer)
2020-03-25 15:31:51 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:31:51 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-25 15:31:51 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36f0558e]
2020-03-25 15:31:51 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36f0558e]
2020-03-25 15:31:51 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36f0558e]
2020-03-25 15:31:51 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36f0558e]
2020-03-25 15:31:51 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-25 15:31:51 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-25 15:31:51 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-25 15:31:51 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-25 15:31:51 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {v=Video{vid=20, vname='测试', pic='a.jpg', online='2020-03-25', author='user2', area='内陆', duration=32, power=1, state=1, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=10, tname='国创'}]}, org.springframework.validation.BindingResult.v=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2020-03-25 15:31:51 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/backStage/videoDetail.jsp]
2020-03-25 15:31:51 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-25 15:32:00 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/video/query", parameters={}
2020-03-25 15:32:00 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.VideoController#query(Video, String, Integer, Integer)
2020-03-25 15:32:00 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.pageQuery]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-25 15:32:00 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-25 15:32:00 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-25 15:32:00 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-25 15:32:00 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12deca2]
2020-03-25 15:32:00 [DEBUG]-org.apache.ibatis.cache.decorators.LoggingCache.getObject(LoggingCache.java:60) - Cache Hit Ratio [SQL_CACHE]: 0.9047619047619048
2020-03-25 15:32:00 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-25 15:32:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: SELECT count(0) FROM video v, videopower vp WHERE v.power = vp.videopower_id 
2020-03-25 15:32:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-25 15:32:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-25 15:32:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id LIMIT ? 
2020-03-25 15:32:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 5(Integer)
2020-03-25 15:32:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 1(Integer)
2020-03-25 15:32:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 2
2020-03-25 15:32:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 2(Integer)
2020-03-25 15:32:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 3(Integer)
2020-03-25 15:32:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 8(Integer)
2020-03-25 15:32:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 9(Integer)
2020-03-25 15:32:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 5
2020-03-25 15:32:00 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12deca2]
2020-03-25 15:32:00 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12deca2]
2020-03-25 15:32:00 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12deca2]
2020-03-25 15:32:00 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12deca2]
2020-03-25 15:32:00 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-25 15:32:00 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-25 15:32:00 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-25 15:32:00 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {video=Video{vid=null, vname='null', pic='null', online='null', author='null', area='null', duration=null, power=null, state=null, videoPower=null, type=null}, org.springframework.validation.BindingResult.video=org.springframework.validation.BeanPropertyBindingResult: 0 errors, memoryName=null, p=PageInfo{pageNum=1, pageSize=5, size=5, startRow=1, endRow=5, total=20, pages=4, list=Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=20, pages=4, reasonable=false, pageSizeZero=false}[Video{vid=1, vname='迪士尼公主', pic='c1.jpg', online='2020-01-12', author='tom', area='内陆', duration=160, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}]}, Video{vid=2, vname='test', pic='c2.jpg', online='2019-10-01', author='larry', area='欧美', duration=90, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=7, tname='科技'}]}, Video{vid=3, vname='testtest', pic='c3.jpg', online='2018-05-06', author='吴正', area='港台', duration=90, power=1, state=3, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=8, vname='送我上青云', pic='swsqy.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=3, tname='生活'}]}, Video{vid=9, vname='鼠胆英雄', pic='sdyx.jpg', online='2019-08-09', author='罗菲', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=9, tname='惊悚'}]}], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=4, navigatepageNums=[1, 2, 3, 4]}, org.springframework.validation.BindingResult.p=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2020-03-25 15:32:00 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/backStage/videoManage.jsp]
2020-03-25 15:32:00 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-25 15:32:04 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/videoManage/video/query", parameters={masked}
2020-03-25 15:32:04 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.VideoController#query(Video, String, Integer, Integer)
2020-03-25 15:32:04 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.pageQuery]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-25 15:32:04 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-25 15:32:04 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-25 15:32:04 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-25 15:32:04 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cab70e1]
2020-03-25 15:32:04 [DEBUG]-org.apache.ibatis.cache.decorators.LoggingCache.getObject(LoggingCache.java:60) - Cache Hit Ratio [SQL_CACHE]: 0.9090909090909091
2020-03-25 15:32:04 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-25 15:32:04 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: SELECT count(0) FROM video v, videopower vp WHERE v.power = vp.videopower_id 
2020-03-25 15:32:04 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-25 15:32:04 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-25 15:32:04 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id LIMIT ?, ? 
2020-03-25 15:32:04 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 5(Integer), 5(Integer)
2020-03-25 15:32:04 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:04 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 10(Integer)
2020-03-25 15:32:04 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:04 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:04 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 17(Integer)
2020-03-25 15:32:04 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:04 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:04 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 20(Integer)
2020-03-25 15:32:04 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:04 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:04 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 21(Integer)
2020-03-25 15:32:04 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:04 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:04 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 4(Integer)
2020-03-25 15:32:04 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:04 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 5
2020-03-25 15:32:04 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cab70e1]
2020-03-25 15:32:04 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cab70e1]
2020-03-25 15:32:04 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cab70e1]
2020-03-25 15:32:04 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cab70e1]
2020-03-25 15:32:04 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-25 15:32:04 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-25 15:32:04 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-25 15:32:04 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {video=Video{vid=null, vname='', pic='null', online='null', author='null', area='null', duration=null, power=null, state=null, videoPower=null, type=null}, org.springframework.validation.BindingResult.video=org.springframework.validation.BeanPropertyBindingResult: 0 errors, memoryName=, p=PageInfo{pageNum=2, pageSize=5, size=5, startRow=6, endRow=10, total=20, pages=4, list=Page{count=true, pageNum=2, pageSize=5, startRow=5, endRow=10, total=20, pages=4, reasonable=false, pageSizeZero=false}[Video{vid=10, vname='八子', pic='bz.jpg', online='2019-08-09', author='王福', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=17, vname='帝企鹅日记：召唤', pic='dqerj.jpg', online='2019-06-21', author='杰克逊', area='欧美', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=7, tname='科技'}]}, Video{vid=20, vname='测试', pic='a.jpg', online='2020-03-25', author='user2', area='内陆', duration=32, power=1, state=1, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=10, tname='国创'}]}, Video{vid=21, vname='测试数据', pic='a.jpg', online='2020-03-25', author='user2', area='内陆', duration=7, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=10, tname='国创'}]}, Video{vid=4, vname='冰雪女王4：魔镜世界', pic='bxnw.jpg', online='2018-09-07', author='tony', area='欧美', duration=120, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=1, tname='搞笑'}]}], prePage=1, nextPage=3, isFirstPage=false, isLastPage=false, hasPreviousPage=true, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=4, navigatepageNums=[1, 2, 3, 4]}, org.springframework.validation.BindingResult.p=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2020-03-25 15:32:04 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/backStage/videoManage.jsp]
2020-03-25 15:32:04 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-25 15:32:12 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/videoManage/video/forbidden", parameters={masked}
2020-03-25 15:32:12 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.VideoController#forbidden(Integer)
2020-03-25 15:32:12 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.get]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-25 15:32:12 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-25 15:32:12 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-25 15:32:12 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-25 15:32:12 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-25 15:32:12 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1efeb9fb]
2020-03-25 15:32:12 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-25 15:32:12 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and v.video_id = ? 
2020-03-25 15:32:12 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 21(Integer)
2020-03-25 15:32:12 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:12 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 21(Integer)
2020-03-25 15:32:12 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:12 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-25 15:32:12 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1efeb9fb]
2020-03-25 15:32:12 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1efeb9fb]
2020-03-25 15:32:12 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1efeb9fb]
2020-03-25 15:32:12 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1efeb9fb]
2020-03-25 15:32:12 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-25 15:32:12 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-25 15:32:12 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-25 15:32:12 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-25 15:32:12 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.mod]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-25 15:32:12 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-25 15:32:12 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-25 15:32:12 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-25 15:32:12 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41f1e53b]
2020-03-25 15:32:12 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-25 15:32:12 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: update video set video_name = ?, pic = ?, author = ?, online = ?, area = ?, duration = ?, power = ?, state = ? where video_id = ? 
2020-03-25 15:32:12 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 测试数据(String), a.jpg(String), user2(String), 2020-03-25(String), 内陆(String), 7(Integer), 1(Integer), 3(Integer), 21(Integer)
2020-03-25 15:32:12 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==    Updates: 1
2020-03-25 15:32:12 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41f1e53b]
2020-03-25 15:32:12 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41f1e53b]
2020-03-25 15:32:12 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41f1e53b]
2020-03-25 15:32:12 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41f1e53b]
2020-03-25 15:32:12 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-25 15:32:12 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-25 15:32:12 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-25 15:32:12 [DEBUG]-org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [application/json, text/javascript, */*;q=0.01] and supported [text/plain, */*, application/json, application/*+json]
2020-03-25 15:32:12 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing ["{"msg":"已封禁！"}"]
2020-03-25 15:32:12 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-25 15:32:13 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/video/query", parameters={}
2020-03-25 15:32:13 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.VideoController#query(Video, String, Integer, Integer)
2020-03-25 15:32:13 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.pageQuery]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-25 15:32:13 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-25 15:32:13 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-25 15:32:13 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-25 15:32:13 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@596cdffd]
2020-03-25 15:32:13 [DEBUG]-org.apache.ibatis.cache.decorators.LoggingCache.getObject(LoggingCache.java:60) - Cache Hit Ratio [SQL_CACHE]: 0.9130434782608695
2020-03-25 15:32:13 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-25 15:32:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: SELECT count(0) FROM video v, videopower vp WHERE v.power = vp.videopower_id 
2020-03-25 15:32:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-25 15:32:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-25 15:32:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id LIMIT ? 
2020-03-25 15:32:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 5(Integer)
2020-03-25 15:32:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 1(Integer)
2020-03-25 15:32:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 2
2020-03-25 15:32:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 2(Integer)
2020-03-25 15:32:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 3(Integer)
2020-03-25 15:32:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 8(Integer)
2020-03-25 15:32:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 9(Integer)
2020-03-25 15:32:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 5
2020-03-25 15:32:13 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@596cdffd]
2020-03-25 15:32:13 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@596cdffd]
2020-03-25 15:32:13 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@596cdffd]
2020-03-25 15:32:13 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@596cdffd]
2020-03-25 15:32:13 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-25 15:32:13 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-25 15:32:13 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-25 15:32:13 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {video=Video{vid=null, vname='null', pic='null', online='null', author='null', area='null', duration=null, power=null, state=null, videoPower=null, type=null}, org.springframework.validation.BindingResult.video=org.springframework.validation.BeanPropertyBindingResult: 0 errors, memoryName=null, p=PageInfo{pageNum=1, pageSize=5, size=5, startRow=1, endRow=5, total=20, pages=4, list=Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=20, pages=4, reasonable=false, pageSizeZero=false}[Video{vid=1, vname='迪士尼公主', pic='c1.jpg', online='2020-01-12', author='tom', area='内陆', duration=160, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}]}, Video{vid=2, vname='test', pic='c2.jpg', online='2019-10-01', author='larry', area='欧美', duration=90, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=7, tname='科技'}]}, Video{vid=3, vname='testtest', pic='c3.jpg', online='2018-05-06', author='吴正', area='港台', duration=90, power=1, state=3, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=8, vname='送我上青云', pic='swsqy.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=3, tname='生活'}]}, Video{vid=9, vname='鼠胆英雄', pic='sdyx.jpg', online='2019-08-09', author='罗菲', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=9, tname='惊悚'}]}], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=4, navigatepageNums=[1, 2, 3, 4]}, org.springframework.validation.BindingResult.p=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2020-03-25 15:32:13 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/backStage/videoManage.jsp]
2020-03-25 15:32:13 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-25 15:32:18 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/video/query?state=1", parameters={masked}
2020-03-25 15:32:18 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.VideoController#query(Video, String, Integer, Integer)
2020-03-25 15:32:18 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.pageQuery]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-25 15:32:18 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-25 15:32:18 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-25 15:32:18 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-25 15:32:18 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b47adb7]
2020-03-25 15:32:18 [DEBUG]-org.apache.ibatis.cache.decorators.LoggingCache.getObject(LoggingCache.java:60) - Cache Hit Ratio [SQL_CACHE]: 0.9166666666666666
2020-03-25 15:32:18 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-25 15:32:18 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: SELECT count(0) FROM video v, videopower vp WHERE v.power = vp.videopower_id AND state = ? 
2020-03-25 15:32:18 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 1(Integer)
2020-03-25 15:32:18 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-25 15:32:18 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and state = ? LIMIT ? 
2020-03-25 15:32:18 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 1(Integer), 5(Integer)
2020-03-25 15:32:18 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:18 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 20(Integer)
2020-03-25 15:32:18 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:18 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-25 15:32:18 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b47adb7]
2020-03-25 15:32:18 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b47adb7]
2020-03-25 15:32:18 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b47adb7]
2020-03-25 15:32:18 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b47adb7]
2020-03-25 15:32:18 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-25 15:32:18 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-25 15:32:18 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-25 15:32:18 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {video=Video{vid=null, vname='null', pic='null', online='null', author='null', area='null', duration=null, power=null, state=1, videoPower=null, type=null}, org.springframework.validation.BindingResult.video=org.springframework.validation.BeanPropertyBindingResult: 0 errors, memoryName=null, p=PageInfo{pageNum=1, pageSize=5, size=1, startRow=1, endRow=1, total=1, pages=1, list=Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=1, pages=1, reasonable=false, pageSizeZero=false}[Video{vid=20, vname='测试', pic='a.jpg', online='2020-03-25', author='user2', area='内陆', duration=32, power=1, state=1, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=10, tname='国创'}]}], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.p=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2020-03-25 15:32:18 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/backStage/videoManage.jsp]
2020-03-25 15:32:18 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-25 15:32:19 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/video/query?state=3", parameters={masked}
2020-03-25 15:32:19 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.VideoController#query(Video, String, Integer, Integer)
2020-03-25 15:32:19 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.pageQuery]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-25 15:32:19 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-25 15:32:19 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-25 15:32:19 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-25 15:32:19 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c91f742]
2020-03-25 15:32:19 [DEBUG]-org.apache.ibatis.cache.decorators.LoggingCache.getObject(LoggingCache.java:60) - Cache Hit Ratio [SQL_CACHE]: 0.92
2020-03-25 15:32:19 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-25 15:32:19 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: SELECT count(0) FROM video v, videopower vp WHERE v.power = vp.videopower_id AND state = ? 
2020-03-25 15:32:19 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 3(Integer)
2020-03-25 15:32:19 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-25 15:32:19 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and state = ? LIMIT ? 
2020-03-25 15:32:19 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 3(Integer), 5(Integer)
2020-03-25 15:32:19 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:19 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 3(Integer)
2020-03-25 15:32:19 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:19 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:19 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 21(Integer)
2020-03-25 15:32:19 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:19 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 2
2020-03-25 15:32:19 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c91f742]
2020-03-25 15:32:19 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c91f742]
2020-03-25 15:32:19 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c91f742]
2020-03-25 15:32:19 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c91f742]
2020-03-25 15:32:19 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-25 15:32:19 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-25 15:32:19 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-25 15:32:19 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {video=Video{vid=null, vname='null', pic='null', online='null', author='null', area='null', duration=null, power=null, state=3, videoPower=null, type=null}, org.springframework.validation.BindingResult.video=org.springframework.validation.BeanPropertyBindingResult: 0 errors, memoryName=null, p=PageInfo{pageNum=1, pageSize=5, size=2, startRow=1, endRow=2, total=2, pages=1, list=Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=2, pages=1, reasonable=false, pageSizeZero=false}[Video{vid=3, vname='testtest', pic='c3.jpg', online='2018-05-06', author='吴正', area='港台', duration=90, power=1, state=3, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=21, vname='测试数据', pic='a.jpg', online='2020-03-25', author='user2', area='内陆', duration=7, power=1, state=3, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=10, tname='国创'}]}], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]}, org.springframework.validation.BindingResult.p=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2020-03-25 15:32:19 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/backStage/videoManage.jsp]
2020-03-25 15:32:19 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-25 15:32:28 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/video/indexQuery", parameters={}
2020-03-25 15:32:28 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.VideoController#indexQuery()
2020-03-25 15:32:28 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.TypeServiceImpl.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-25 15:32:28 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-25 15:32:28 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-25 15:32:28 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-25 15:32:28 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-25 15:32:28 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@643e8cdf]
2020-03-25 15:32:28 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from type 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 10
2020-03-25 15:32:28 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@643e8cdf]
2020-03-25 15:32:28 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@643e8cdf]
2020-03-25 15:32:28 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@643e8cdf]
2020-03-25 15:32:28 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@643e8cdf]
2020-03-25 15:32:28 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-25 15:32:28 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-25 15:32:28 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-25 15:32:28 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-25 15:32:28 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.recommend]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-25 15:32:28 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-25 15:32:28 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-25 15:32:28 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-25 15:32:28 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ed261e7]
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.cache.decorators.LoggingCache.getObject(LoggingCache.java:60) - Cache Hit Ratio [SQL_CACHE]: 0.9230769230769231
2020-03-25 15:32:28 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: SELECT count(0) FROM video v, videopower vp WHERE v.power = vp.videopower_id AND state = 2 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and state = 2 order by online desc LIMIT ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 8(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 1(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 2
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 2(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 6(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 7(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 8(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 9(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 10(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 11(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 8
2020-03-25 15:32:28 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ed261e7]
2020-03-25 15:32:28 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ed261e7]
2020-03-25 15:32:28 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ed261e7]
2020-03-25 15:32:28 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ed261e7]
2020-03-25 15:32:28 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-25 15:32:28 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-25 15:32:28 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-25 15:32:28 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.pageQuery]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-25 15:32:28 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-25 15:32:28 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-25 15:32:28 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-25 15:32:28 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c7b92d2]
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.cache.decorators.LoggingCache.getObject(LoggingCache.java:60) - Cache Hit Ratio [SQL_CACHE]: 0.9259259259259259
2020-03-25 15:32:28 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: SELECT count(0) FROM video v, videopower vp WHERE v.power = vp.videopower_id AND state = ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 2(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and state = ? LIMIT ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 2(Integer), 12(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 1(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 2
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 2(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 4(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 5(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 6(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 7(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 8(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 9(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 10(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 11(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 12(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 13(Integer)
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:32:28 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 12
2020-03-25 15:32:28 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c7b92d2]
2020-03-25 15:32:28 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c7b92d2]
2020-03-25 15:32:28 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c7b92d2]
2020-03-25 15:32:28 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c7b92d2]
2020-03-25 15:32:28 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-25 15:32:28 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-25 15:32:28 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-25 15:32:28 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {hotlist=Page{count=true, pageNum=1, pageSize=12, startRow=0, endRow=12, total=17, pages=2, reasonable=false, pageSizeZero=false}[Video{vid=1, vname='迪士尼公主', pic='c1.jpg', online='2020-01-12', author='tom', area='内陆', duration=160, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}]}, Video{vid=2, vname='test', pic='c2.jpg', online='2019-10-01', author='larry', area='欧美', duration=90, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=7, tname='科技'}]}, Video{vid=4, vname='冰雪女王4：魔镜世界', pic='bxnw.jpg', online='2018-09-07', author='tony', area='欧美', duration=120, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=1, tname='搞笑'}]}, Video{vid=5, vname='昨日奇迹', pic='zrqj.jpg', online='2017-10-23', author='张三', area='内陆', duration=72, power=3, state=2, videoPower=VideoPower{videoPower_id=3, videoPower_name='可下载'}, type=[Type{tid=1, tname='搞笑'}]}, Video{vid=6, vname='哪吒之魔童降世', pic='nz.jpg', online='2019-08-09', author='饺子', area='内陆', duration=60, power=4, state=2, videoPower=VideoPower{videoPower_id=4, videoPower_name='收费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=7, vname='银河补习班', pic='yhbxb.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=3, tname='生活'}]}, Video{vid=8, vname='送我上青云', pic='swsqy.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=3, tname='生活'}]}, Video{vid=9, vname='鼠胆英雄', pic='sdyx.jpg', online='2019-08-09', author='罗菲', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=9, tname='惊悚'}]}, Video{vid=10, vname='八子', pic='bz.jpg', online='2019-08-09', author='王福', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=11, vname='愤怒的小鸟2', pic='fndxn.jpg', online='2019-08-09', author='tony', area='欧美', duration=60, power=4, state=2, videoPower=VideoPower{videoPower_id=4, videoPower_name='收费'}, type=[Type{tid=7, tname='科技'}]}, Video{vid=12, vname='速度与激情：特别行动', pic='sdyjq.jpg', online='2019-08-09', author='tony', area='欧美', duration=60, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=13, vname='铤而走险', pic='tezx.jpg', online='2019-07-18', author='张天师', area='港台', duration=60, power=3, state=2, videoPower=VideoPower{videoPower_id=3, videoPower_name='可下载'}, type=[Type{tid=8, tname='鬼畜'}]}], recommendlist=Page{count=true, pageNum=1, pageSize=8, startRow=0, endRow=8, total=17, pages=3, reasonable=false, pageSizeZero=false}[Video{vid=1, vname='迪士尼公主', pic='c1.jpg', online='2020-01-12', author='tom', area='内陆', duration=160, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}]}, Video{vid=2, vname='test', pic='c2.jpg', online='2019-10-01', author='larry', area='欧美', duration=90, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=7, tname='科技'}]}, Video{vid=6, vname='哪吒之魔童降世', pic='nz.jpg', online='2019-08-09', author='饺子', area='内陆', duration=60, power=4, state=2, videoPower=VideoPower{videoPower_id=4, videoPower_name='收费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=7, vname='银河补习班', pic='yhbxb.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=3, tname='生活'}]}, Video{vid=8, vname='送我上青云', pic='swsqy.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=3, tname='生活'}]}, Video{vid=9, vname='鼠胆英雄', pic='sdyx.jpg', online='2019-08-09', author='罗菲', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=9, tname='惊悚'}]}, Video{vid=10, vname='八子', pic='bz.jpg', online='2019-08-09', author='王福', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=11, vname='愤怒的小鸟2', pic='fndxn.jpg', online='2019-08-09', author='tony', area='欧美', duration=60, power=4, state=2, videoPower=VideoPower{videoPower_id=4, videoPower_name='收费'}, type=[Type{tid=7, tname='科技'}]}], typelist=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}, Type{tid=3, tname='生活'}, Type{tid=4, tname='美食'}, Type{tid=5, tname='财经'}, Type{tid=6, tname='数码'}, Type{tid=7, tname='科技'}, Type{tid=8, tname='鬼畜'}, Type{tid=9, tname='惊悚'}, Type{tid=10, tname='国创'}]}
2020-03-25 15:32:28 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/main.jsp]
2020-03-25 15:32:28 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-25 15:32:58 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/video/seach?vname=%E6%B5%8B%E8%AF%95", parameters={masked}
2020-03-25 15:32:58 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.VideoController#seach(Video)
2020-03-25 15:32:58 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.TypeServiceImpl.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-25 15:32:58 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-25 15:32:58 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-25 15:32:58 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-25 15:32:58 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-25 15:32:58 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@715db15b]
2020-03-25 15:32:58 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-25 15:32:58 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from type 
2020-03-25 15:32:58 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-25 15:32:58 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 10
2020-03-25 15:32:58 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@715db15b]
2020-03-25 15:32:58 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@715db15b]
2020-03-25 15:32:58 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@715db15b]
2020-03-25 15:32:58 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@715db15b]
2020-03-25 15:32:58 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-25 15:32:58 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-25 15:32:58 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-25 15:32:58 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-25 15:32:58 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-25 15:32:59 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-25 15:32:59 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-25 15:32:59 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-25 15:32:59 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-25 15:32:59 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5116d50e]
2020-03-25 15:32:59 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-25 15:32:59 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and video_name like concat('%',?,'%') and state = ? 
2020-03-25 15:32:59 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 测试(String), 2(Integer)
2020-03-25 15:33:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 0
2020-03-25 15:33:00 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5116d50e]
2020-03-25 15:33:00 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5116d50e]
2020-03-25 15:33:00 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5116d50e]
2020-03-25 15:33:00 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5116d50e]
2020-03-25 15:33:00 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-25 15:33:00 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-25 15:33:00 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-25 15:33:00 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-25 15:33:00 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {video=Video{vid=null, vname='测试', pic='null', online='null', author='null', area='null', duration=null, power=null, state=2, videoPower=null, type=null}, org.springframework.validation.BindingResult.video=org.springframework.validation.BeanPropertyBindingResult: 0 errors, videoList=[], typelist=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}, Type{tid=3, tname='生活'}, Type{tid=4, tname='美食'}, Type{tid=5, tname='财经'}, Type{tid=6, tname='数码'}, Type{tid=7, tname='科技'}, Type{tid=8, tname='鬼畜'}, Type{tid=9, tname='惊悚'}, Type{tid=10, tname='国创'}]}
2020-03-25 15:33:00 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/videoList.jsp]
2020-03-25 15:33:00 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-25 15:33:08 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/video/seach?vname=%E9%93%B6%E6%B2%B3", parameters={masked}
2020-03-25 15:33:08 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.VideoController#seach(Video)
2020-03-25 15:33:08 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.TypeServiceImpl.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-25 15:33:08 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-25 15:33:08 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-25 15:33:08 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-25 15:33:08 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-25 15:33:08 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e5a689d]
2020-03-25 15:33:08 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-25 15:33:08 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from type 
2020-03-25 15:33:08 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-25 15:33:08 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 10
2020-03-25 15:33:08 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e5a689d]
2020-03-25 15:33:08 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e5a689d]
2020-03-25 15:33:08 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e5a689d]
2020-03-25 15:33:08 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e5a689d]
2020-03-25 15:33:08 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-25 15:33:08 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-25 15:33:08 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-25 15:33:08 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-25 15:33:08 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-25 15:33:08 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-25 15:33:08 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-25 15:33:08 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-25 15:33:08 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-25 15:33:08 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48581f5c]
2020-03-25 15:33:08 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-25 15:33:08 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and video_name like concat('%',?,'%') and state = ? 
2020-03-25 15:33:08 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 银河(String), 2(Integer)
2020-03-25 15:33:08 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-25 15:33:08 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 7(Integer)
2020-03-25 15:33:08 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-25 15:33:08 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-25 15:33:08 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48581f5c]
2020-03-25 15:33:08 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48581f5c]
2020-03-25 15:33:08 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48581f5c]
2020-03-25 15:33:08 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48581f5c]
2020-03-25 15:33:08 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-25 15:33:08 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-25 15:33:08 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-25 15:33:08 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-25 15:33:08 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {video=Video{vid=null, vname='银河', pic='null', online='null', author='null', area='null', duration=null, power=null, state=2, videoPower=null, type=null}, org.springframework.validation.BindingResult.video=org.springframework.validation.BeanPropertyBindingResult: 0 errors, videoList=[Video{vid=7, vname='银河补习班', pic='yhbxb.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=3, tname='生活'}]}], typelist=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}, Type{tid=3, tname='生活'}, Type{tid=4, tname='美食'}, Type{tid=5, tname='财经'}, Type{tid=6, tname='数码'}, Type{tid=7, tname='科技'}, Type{tid=8, tname='鬼畜'}, Type{tid=9, tname='惊悚'}, Type{tid=10, tname='国创'}]}
2020-03-25 15:33:08 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/videoList.jsp]
2020-03-25 15:33:08 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-25 15:33:57 [DEBUG]-org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1005) - Closing WebApplicationContext for namespace 'springmvc-servlet', started on Wed Mar 25 14:09:59 CST 2020, parent: Root WebApplicationContext
2020-03-25 15:33:58 [DEBUG]-org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1005) - Closing Root WebApplicationContext, started on Wed Mar 25 14:08:54 CST 2020
2020-03-29 14:50:49 [INFO]-org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:271) - Root WebApplicationContext: initialization started
2020-03-29 14:50:50 [DEBUG]-org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:595) - Refreshing Root WebApplicationContext
2020-03-29 14:50:53 [DEBUG]-org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\com\service\impl\FavoritesServiceImpl.class]
2020-03-29 14:50:53 [DEBUG]-org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\com\service\impl\PowerServiceImpl.class]
2020-03-29 14:50:53 [DEBUG]-org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\com\service\impl\TypeManageServiceImpl.class]
2020-03-29 14:50:53 [DEBUG]-org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\com\service\impl\TypeServiceImpl.class]
2020-03-29 14:50:53 [DEBUG]-org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\com\service\impl\UserPowerServiceImpl.class]
2020-03-29 14:50:53 [DEBUG]-org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\com\service\impl\UserServiceImpl.class]
2020-03-29 14:50:53 [DEBUG]-org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\com\service\impl\VideoServiceImpl.class]
2020-03-29 14:50:55 [DEBUG]-org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:396) - Loaded 21 bean definitions from class path resource [spring-mybatis.xml]
2020-03-29 14:50:56 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2020-03-29 14:50:56 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
2020-03-29 14:50:57 [DEBUG]-org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:105) - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2020-03-29 14:50:57 [DEBUG]-org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\com\dao\FavoritesDao.class]
2020-03-29 14:50:57 [DEBUG]-org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\com\dao\PowerDao.class]
2020-03-29 14:50:57 [DEBUG]-org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\com\dao\TypeDao.class]
2020-03-29 14:50:57 [DEBUG]-org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\com\dao\TypeManageDao.class]
2020-03-29 14:50:57 [DEBUG]-org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\com\dao\UserDao.class]
2020-03-29 14:50:57 [DEBUG]-org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\com\dao\UserPowerDao.class]
2020-03-29 14:50:57 [DEBUG]-org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\com\dao\VideoDao.class]
2020-03-29 14:50:57 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating MapperFactoryBean with name 'favoritesDao' and 'com.dao.FavoritesDao' mapperInterface
2020-03-29 14:50:57 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating MapperFactoryBean with name 'powerDao' and 'com.dao.PowerDao' mapperInterface
2020-03-29 14:50:57 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating MapperFactoryBean with name 'typeDao' and 'com.dao.TypeDao' mapperInterface
2020-03-29 14:50:57 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating MapperFactoryBean with name 'typeManageDao' and 'com.dao.TypeManageDao' mapperInterface
2020-03-29 14:50:57 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating MapperFactoryBean with name 'userDao' and 'com.dao.UserDao' mapperInterface
2020-03-29 14:50:57 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating MapperFactoryBean with name 'userPowerDao' and 'com.dao.UserPowerDao' mapperInterface
2020-03-29 14:50:57 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating MapperFactoryBean with name 'videoDao' and 'com.dao.VideoDao' mapperInterface
2020-03-29 14:50:58 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'propertyConfigurer'
2020-03-29 14:50:59 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2020-03-29 14:50:59 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2020-03-29 14:50:59 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2020-03-29 14:50:59 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2020-03-29 14:50:59 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2020-03-29 14:50:59 [DEBUG]-org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(UiApplicationContextUtils.java:85) - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@75b11106]
2020-03-29 14:50:59 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'favoritesServiceImpl'
2020-03-29 14:50:59 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
2020-03-29 14:51:00 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'favoritesDao'
2020-03-29 14:51:00 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'sessionFactory'
2020-03-29 14:51:00 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'dataSource'
2020-03-29 14:51:01 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Property 'configuration' or 'configLocation' not specified, using default MyBatis Configuration
2020-03-29 14:51:02 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registered plugin: 'com.github.pagehelper.PageInterceptor@757b7279'
2020-03-29 14:51:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Parsed mapper file: 'file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\mappers\FavoritesDao.xml]'
2020-03-29 14:51:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Parsed mapper file: 'file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\mappers\PowerDao.xml]'
2020-03-29 14:51:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Parsed mapper file: 'file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\mappers\TypeDao.xml]'
2020-03-29 14:51:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Parsed mapper file: 'file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\mappers\TypeManageDao.xml]'
2020-03-29 14:51:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Parsed mapper file: 'file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\mappers\UserDao.xml]'
2020-03-29 14:51:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Parsed mapper file: 'file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\mappers\UserPowerDao.xml]'
2020-03-29 14:51:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Parsed mapper file: 'file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\mappers\VideoDao.xml]'
2020-03-29 14:51:05 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'txAdvice'
2020-03-29 14:51:05 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'transactionManager'
2020-03-29 14:51:05 [DEBUG]-org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.addTransactionalMethod(NameMatchTransactionAttributeSource.java:95) - Adding transactional method [*get] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly]
2020-03-29 14:51:05 [DEBUG]-org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.addTransactionalMethod(NameMatchTransactionAttributeSource.java:95) - Adding transactional method [*query] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly]
2020-03-29 14:51:05 [DEBUG]-org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.addTransactionalMethod(NameMatchTransactionAttributeSource.java:95) - Adding transactional method [*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2020-03-29 14:51:05 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'powerServiceImpl'
2020-03-29 14:51:05 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'powerDao'
2020-03-29 14:51:05 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'typeManageServiceImpl'
2020-03-29 14:51:05 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'typeManageDao'
2020-03-29 14:51:05 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'typeServiceImpl'
2020-03-29 14:51:05 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'typeDao'
2020-03-29 14:51:05 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'userPowerServiceImpl'
2020-03-29 14:51:05 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'userPowerDao'
2020-03-29 14:51:05 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'userServiceImpl'
2020-03-29 14:51:06 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'userDao'
2020-03-29 14:51:06 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'videoServiceImpl'
2020-03-29 14:51:06 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'videoDao'
2020-03-29 14:51:06 [DEBUG]-org.springframework.jndi.JndiTemplate.lookup(JndiTemplate.java:155) - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
2020-03-29 14:51:06 [DEBUG]-org.springframework.jndi.JndiLocatorSupport.lookup(JndiLocatorSupport.java:102) - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
2020-03-29 14:51:06 [DEBUG]-org.springframework.jndi.JndiTemplate.lookup(JndiTemplate.java:155) - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
2020-03-29 14:51:06 [DEBUG]-org.springframework.jndi.JndiPropertySource.getProperty(JndiPropertySource.java:101) - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
2020-03-29 14:51:06 [INFO]-org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:307) - Root WebApplicationContext initialized in 16193 ms
2020-03-29 14:51:06 [DEBUG]-org.springframework.web.filter.GenericFilterBean.init(GenericFilterBean.java:242) - Filter 'characterFilter' configured for use
2020-03-29 14:54:05 [INFO]-org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525) - Initializing Servlet 'springmvc'
2020-03-29 14:54:05 [DEBUG]-org.springframework.jndi.JndiTemplate.lookup(JndiTemplate.java:155) - Looking up JNDI object with name [java:comp/env/spring.profiles.active]
2020-03-29 14:54:05 [DEBUG]-org.springframework.jndi.JndiLocatorSupport.lookup(JndiLocatorSupport.java:102) - Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
2020-03-29 14:54:05 [DEBUG]-org.springframework.jndi.JndiTemplate.lookup(JndiTemplate.java:155) - Looking up JNDI object with name [spring.profiles.active]
2020-03-29 14:54:05 [DEBUG]-org.springframework.jndi.JndiPropertySource.getProperty(JndiPropertySource.java:101) - JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
2020-03-29 14:54:05 [DEBUG]-org.springframework.jndi.JndiTemplate.lookup(JndiTemplate.java:155) - Looking up JNDI object with name [java:comp/env/spring.profiles.default]
2020-03-29 14:54:05 [DEBUG]-org.springframework.jndi.JndiLocatorSupport.lookup(JndiLocatorSupport.java:102) - Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
2020-03-29 14:54:05 [DEBUG]-org.springframework.jndi.JndiTemplate.lookup(JndiTemplate.java:155) - Looking up JNDI object with name [spring.profiles.default]
2020-03-29 14:54:05 [DEBUG]-org.springframework.jndi.JndiPropertySource.getProperty(JndiPropertySource.java:101) - JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
2020-03-29 14:54:05 [DEBUG]-org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:595) - Refreshing WebApplicationContext for namespace 'springmvc-servlet'
2020-03-29 14:54:06 [DEBUG]-org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\com\controller\AdminController.class]
2020-03-29 14:54:06 [DEBUG]-org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\com\controller\FavoritesController.class]
2020-03-29 14:54:06 [DEBUG]-org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\com\controller\UserController.class]
2020-03-29 14:54:06 [DEBUG]-org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:437) - Identified candidate component class: file [D:\IDEA_workplace\VideoManage\target\VideoManage\WEB-INF\classes\com\controller\VideoController.class]
2020-03-29 14:54:08 [DEBUG]-org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:396) - Loaded 27 bean definitions from ServletContext resource [/WEB-INF/springmvc-servlet.xml]
2020-03-29 14:54:09 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2020-03-29 14:54:10 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2020-03-29 14:54:10 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2020-03-29 14:54:10 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2020-03-29 14:54:10 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2020-03-29 14:54:10 [DEBUG]-org.springframework.ui.context.support.UiApplicationContextUtils.initThemeSource(UiApplicationContextUtils.java:85) - Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@36ccd59c]
2020-03-29 14:54:10 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'adminController'
2020-03-29 14:54:10 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'favoritesController'
2020-03-29 14:54:10 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'userController'
2020-03-29 14:54:10 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'videoController'
2020-03-29 14:54:10 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mvcContentNegotiationManager'
2020-03-29 14:54:10 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping'
2020-03-29 14:54:11 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mvcCorsConfigurations'
2020-03-29 14:54:11 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.web.servlet.handler.MappedInterceptor#0'
2020-03-29 14:54:11 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0'
2020-03-29 14:54:12 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.handlerMethodsInitialized(AbstractHandlerMethodMapping.java:351) - 31 mappings in 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping'
2020-03-29 14:54:12 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter'
2020-03-29 14:54:19 [DEBUG]-org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:615) - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-03-29 14:54:23 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'mvcUriComponentsContributor'
2020-03-29 14:54:23 [DEBUG]-org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:615) - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2020-03-29 14:54:23 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver#0'
2020-03-29 14:54:23 [DEBUG]-org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.initExceptionHandlerAdviceCache(ExceptionHandlerExceptionResolver.java:297) - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2020-03-29 14:54:23 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver#0'
2020-03-29 14:54:23 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver#0'
2020-03-29 14:54:23 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
2020-03-29 14:54:23 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
2020-03-29 14:54:23 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
2020-03-29 14:54:23 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler#0'
2020-03-29 14:54:23 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.web.servlet.handler.SimpleUrlHandlerMapping#0'
2020-03-29 14:54:23 [DEBUG]-org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandlers(SimpleUrlHandlerMapping.java:173) - Patterns [/**] in 'org.springframework.web.servlet.handler.SimpleUrlHandlerMapping#0'
2020-03-29 14:54:23 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
2020-03-29 14:54:23 [DEBUG]-org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:213) - Creating shared instance of singleton bean 'multipartResolver'
2020-03-29 14:54:24 [DEBUG]-org.springframework.web.servlet.DispatcherServlet.initMultipartResolver(DispatcherServlet.java:526) - Detected PutAndPostCommonsMultipartResolver
2020-03-29 14:54:24 [DEBUG]-org.springframework.jndi.JndiTemplate.lookup(JndiTemplate.java:155) - Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
2020-03-29 14:54:24 [DEBUG]-org.springframework.jndi.JndiLocatorSupport.lookup(JndiLocatorSupport.java:102) - Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
2020-03-29 14:54:24 [DEBUG]-org.springframework.jndi.JndiTemplate.lookup(JndiTemplate.java:155) - Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
2020-03-29 14:54:24 [DEBUG]-org.springframework.jndi.JndiPropertySource.getProperty(JndiPropertySource.java:101) - JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
2020-03-29 14:54:24 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:542) - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2020-03-29 14:54:24 [INFO]-org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547) - Completed initialization in 19704 ms
2020-03-29 14:54:25 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/js/jquery-3.2.1.js", parameters={}
2020-03-29 14:54:26 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:54:26 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:54:37 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/video/indexQuery", parameters={}
2020-03-29 14:54:37 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.VideoController#indexQuery()
2020-03-29 14:54:38 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.TypeServiceImpl.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 14:54:59 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 14:54:59 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 14:54:59 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 14:54:59 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 14:54:59 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2119472d]
2020-03-29 14:54:59 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 14:54:59 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from type 
2020-03-29 14:55:00 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-29 14:55:01 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 10
2020-03-29 14:55:01 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2119472d]
2020-03-29 14:55:01 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2119472d]
2020-03-29 14:55:01 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2119472d]
2020-03-29 14:55:01 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2119472d]
2020-03-29 14:55:01 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 14:55:01 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 14:55:01 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 14:55:01 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 14:55:01 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.recommend]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 14:55:01 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 14:55:01 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 14:55:01 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 14:55:01 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c448274]
2020-03-29 14:55:01 [DEBUG]-org.apache.ibatis.cache.decorators.LoggingCache.getObject(LoggingCache.java:60) - Cache Hit Ratio [SQL_CACHE]: 0.0
2020-03-29 14:55:01 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 14:55:01 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: SELECT count(0) FROM video v, videopower vp WHERE v.power = vp.videopower_id AND state = 2 
2020-03-29 14:55:01 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and state = 2 order by online desc LIMIT ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 8(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 1(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 2
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 2(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 6(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 7(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 8(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 9(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 10(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 11(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 8
2020-03-29 14:55:03 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c448274]
2020-03-29 14:55:03 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c448274]
2020-03-29 14:55:03 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c448274]
2020-03-29 14:55:03 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c448274]
2020-03-29 14:55:03 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 14:55:03 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 14:55:03 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 14:55:03 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.pageQuery]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 14:55:03 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 14:55:03 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 14:55:03 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 14:55:03 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44cacf91]
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.cache.decorators.LoggingCache.getObject(LoggingCache.java:60) - Cache Hit Ratio [SQL_CACHE]: 0.0
2020-03-29 14:55:03 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: SELECT count(0) FROM video v, videopower vp WHERE v.power = vp.videopower_id AND state = ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 2(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and state = ? LIMIT ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 2(Integer), 12(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 1(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 2
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 2(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 4(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 5(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 6(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 7(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 8(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 9(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 10(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 11(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 12(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 13(Integer)
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 14:55:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 12
2020-03-29 14:55:03 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44cacf91]
2020-03-29 14:55:03 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44cacf91]
2020-03-29 14:55:03 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44cacf91]
2020-03-29 14:55:03 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44cacf91]
2020-03-29 14:55:03 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 14:55:03 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 14:55:03 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 14:55:03 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {hotlist=Page{count=true, pageNum=1, pageSize=12, startRow=0, endRow=12, total=17, pages=2, reasonable=false, pageSizeZero=false}[Video{vid=1, vname='迪士尼公主', pic='c1.jpg', online='2020-01-12', author='tom', area='内陆', duration=160, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}]}, Video{vid=2, vname='test', pic='c2.jpg', online='2019-10-01', author='larry', area='欧美', duration=90, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=7, tname='科技'}]}, Video{vid=4, vname='冰雪女王4：魔镜世界', pic='bxnw.jpg', online='2018-09-07', author='tony', area='欧美', duration=120, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=1, tname='搞笑'}]}, Video{vid=5, vname='昨日奇迹', pic='zrqj.jpg', online='2017-10-23', author='张三', area='内陆', duration=72, power=3, state=2, videoPower=VideoPower{videoPower_id=3, videoPower_name='可下载'}, type=[Type{tid=1, tname='搞笑'}]}, Video{vid=6, vname='哪吒之魔童降世', pic='nz.jpg', online='2019-08-09', author='饺子', area='内陆', duration=60, power=4, state=2, videoPower=VideoPower{videoPower_id=4, videoPower_name='收费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=7, vname='银河补习班', pic='yhbxb.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=3, tname='生活'}]}, Video{vid=8, vname='送我上青云', pic='swsqy.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=3, tname='生活'}]}, Video{vid=9, vname='鼠胆英雄', pic='sdyx.jpg', online='2019-08-09', author='罗菲', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=9, tname='惊悚'}]}, Video{vid=10, vname='八子', pic='bz.jpg', online='2019-08-09', author='王福', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=11, vname='愤怒的小鸟2', pic='fndxn.jpg', online='2019-08-09', author='tony', area='欧美', duration=60, power=4, state=2, videoPower=VideoPower{videoPower_id=4, videoPower_name='收费'}, type=[Type{tid=7, tname='科技'}]}, Video{vid=12, vname='速度与激情：特别行动', pic='sdyjq.jpg', online='2019-08-09', author='tony', area='欧美', duration=60, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=13, vname='铤而走险', pic='tezx.jpg', online='2019-07-18', author='张天师', area='港台', duration=60, power=3, state=2, videoPower=VideoPower{videoPower_id=3, videoPower_name='可下载'}, type=[Type{tid=8, tname='鬼畜'}]}], recommendlist=Page{count=true, pageNum=1, pageSize=8, startRow=0, endRow=8, total=17, pages=3, reasonable=false, pageSizeZero=false}[Video{vid=1, vname='迪士尼公主', pic='c1.jpg', online='2020-01-12', author='tom', area='内陆', duration=160, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}]}, Video{vid=2, vname='test', pic='c2.jpg', online='2019-10-01', author='larry', area='欧美', duration=90, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=7, tname='科技'}]}, Video{vid=6, vname='哪吒之魔童降世', pic='nz.jpg', online='2019-08-09', author='饺子', area='内陆', duration=60, power=4, state=2, videoPower=VideoPower{videoPower_id=4, videoPower_name='收费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=7, vname='银河补习班', pic='yhbxb.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=3, tname='生活'}]}, Video{vid=8, vname='送我上青云', pic='swsqy.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=3, tname='生活'}]}, Video{vid=9, vname='鼠胆英雄', pic='sdyx.jpg', online='2019-08-09', author='罗菲', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=9, tname='惊悚'}]}, Video{vid=10, vname='八子', pic='bz.jpg', online='2019-08-09', author='王福', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=11, vname='愤怒的小鸟2', pic='fndxn.jpg', online='2019-08-09', author='tony', area='欧美', duration=60, power=4, state=2, videoPower=VideoPower{videoPower_id=4, videoPower_name='收费'}, type=[Type{tid=7, tname='科技'}]}], typelist=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}, Type{tid=3, tname='生活'}, Type{tid=4, tname='美食'}, Type{tid=5, tname='财经'}, Type{tid=6, tname='数码'}, Type{tid=7, tname='科技'}, Type{tid=8, tname='鬼畜'}, Type{tid=9, tname='惊悚'}, Type{tid=10, tname='国创'}]}
2020-03-29 14:55:03 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/main.jsp]
2020-03-29 14:55:05 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 14:55:06 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/js/jquery-1.11.1.min.js", parameters={}
2020-03-29 14:55:06 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:06 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:55:06 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/css/style.css", parameters={}
2020-03-29 14:55:06 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/css/dashboard.css", parameters={}
2020-03-29 14:55:06 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/css/bootstrap.min.css", parameters={}
2020-03-29 14:55:06 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:06 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:55:06 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:06 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:06 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:55:06 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:55:06 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/images/lines.png", parameters={}
2020-03-29 14:55:06 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/images/logo.png", parameters={}
2020-03-29 14:55:06 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:06 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:06 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:55:06 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:55:06 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/js/bootstrap.min.js", parameters={}
2020-03-29 14:55:06 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:06 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:55:07 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/images/nz.jpg", parameters={}
2020-03-29 14:55:07 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/images/c2.jpg", parameters={}
2020-03-29 14:55:07 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/images/swsqy.jpg", parameters={}
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:55:07 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/images/yhbxb.jpg", parameters={}
2020-03-29 14:55:07 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/images/c1.jpg", parameters={}
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:55:07 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/images/sdyx.jpg", parameters={}
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:55:07 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/images/bz.jpg", parameters={}
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:55:07 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/images/tezx.jpg", parameters={}
2020-03-29 14:55:07 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/images/sdyjq.jpg", parameters={}
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:55:07 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/images/zrqj.jpg", parameters={}
2020-03-29 14:55:07 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/images/fndxn.jpg", parameters={}
2020-03-29 14:55:07 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/images/bxnw.jpg", parameters={}
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:07 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:55:08 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/images/9.png", parameters={}
2020-03-29 14:55:08 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:08 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:55:10 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/images/social.png", parameters={}
2020-03-29 14:55:10 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/images/u12.png", parameters={}
2020-03-29 14:55:10 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/fonts/glyphicons-halflings-regular.woff2", parameters={}
2020-03-29 14:55:10 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:10 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:10 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 14:55:10 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:55:10 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 14:55:10 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 15:00:39 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/css/my-login.css", parameters={}
2020-03-29 15:00:39 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/bootstrap/js/bootstrap.min.js", parameters={}
2020-03-29 15:00:39 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/js/jquery.min.js", parameters={}
2020-03-29 15:00:39 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/js/my-login.js", parameters={}
2020-03-29 15:00:39 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 15:00:39 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 15:00:39 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 15:00:39 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 15:00:39 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 15:00:39 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 15:00:39 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 15:00:39 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 15:00:39 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/bootstrap/css/bootstrap.min.css", parameters={}
2020-03-29 15:00:39 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 15:00:39 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 15:00:58 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/videoManage/user/login", parameters={masked}
2020-03-29 15:00:58 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.UserController#login(User, HttpServletRequest)
2020-03-29 15:00:59 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.UserServiceImpl.login]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 15:00:59 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:00:59 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:00:59 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:00:59 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10c7161b]
2020-03-29 15:00:59 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:00:59 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from user where user_name = ? and password = ? and state = 1 
2020-03-29 15:00:59 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: user2(String), user2(String)
2020-03-29 15:01:01 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 15:01:01 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10c7161b]
2020-03-29 15:01:01 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10c7161b]
2020-03-29 15:01:01 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10c7161b]
2020-03-29 15:01:01 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10c7161b]
2020-03-29 15:01:01 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:01:01 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:01:01 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:01:01 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {user=User{uid=null, uname='user2', password='user2', sex='null', phone='null', email='null', state=null, userPower=null}, org.springframework.validation.BindingResult.user=org.springframework.validation.BeanPropertyBindingResult: 0 errors, msg=登录成功！}
2020-03-29 15:01:01 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [../index.jsp]
2020-03-29 15:01:01 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 15:01:02 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/video/indexQuery", parameters={}
2020-03-29 15:01:02 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.VideoController#indexQuery()
2020-03-29 15:01:02 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.TypeServiceImpl.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 15:01:02 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:01:02 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 15:01:02 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:01:02 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:01:02 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44b95049]
2020-03-29 15:01:02 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from type 
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 10
2020-03-29 15:01:02 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44b95049]
2020-03-29 15:01:02 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44b95049]
2020-03-29 15:01:02 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44b95049]
2020-03-29 15:01:02 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44b95049]
2020-03-29 15:01:02 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:01:02 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:01:02 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:01:02 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:01:02 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.recommend]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 15:01:02 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:01:02 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:01:02 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:01:02 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@203d9e20]
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.cache.decorators.LoggingCache.getObject(LoggingCache.java:60) - Cache Hit Ratio [SQL_CACHE]: 0.3333333333333333
2020-03-29 15:01:02 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: SELECT count(0) FROM video v, videopower vp WHERE v.power = vp.videopower_id AND state = 2 
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and state = 2 order by online desc LIMIT ? 
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 8(Integer)
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 1(Integer)
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 2
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 2(Integer)
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 6(Integer)
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 7(Integer)
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 8(Integer)
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 9(Integer)
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 10(Integer)
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 11(Integer)
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 8
2020-03-29 15:01:02 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@203d9e20]
2020-03-29 15:01:02 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@203d9e20]
2020-03-29 15:01:02 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@203d9e20]
2020-03-29 15:01:02 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@203d9e20]
2020-03-29 15:01:02 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:01:02 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:01:02 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:01:02 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.pageQuery]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 15:01:02 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:01:02 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:01:02 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:01:02 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29b7c47c]
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.cache.decorators.LoggingCache.getObject(LoggingCache.java:60) - Cache Hit Ratio [SQL_CACHE]: 0.5
2020-03-29 15:01:02 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: SELECT count(0) FROM video v, videopower vp WHERE v.power = vp.videopower_id AND state = ? 
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 2(Integer)
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and state = ? LIMIT ? 
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 2(Integer), 12(Integer)
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 1(Integer)
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 2
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 2(Integer)
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 4(Integer)
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 5(Integer)
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 6(Integer)
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 7(Integer)
2020-03-29 15:01:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:01:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:01:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 8(Integer)
2020-03-29 15:01:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:01:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:01:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 9(Integer)
2020-03-29 15:01:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:01:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:01:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 10(Integer)
2020-03-29 15:01:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:01:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:01:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 11(Integer)
2020-03-29 15:01:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:01:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:01:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 12(Integer)
2020-03-29 15:01:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:01:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:01:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 13(Integer)
2020-03-29 15:01:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:01:03 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 12
2020-03-29 15:01:03 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29b7c47c]
2020-03-29 15:01:03 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29b7c47c]
2020-03-29 15:01:03 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29b7c47c]
2020-03-29 15:01:03 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29b7c47c]
2020-03-29 15:01:03 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:01:03 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:01:03 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:01:03 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {hotlist=Page{count=true, pageNum=1, pageSize=12, startRow=0, endRow=12, total=17, pages=2, reasonable=false, pageSizeZero=false}[Video{vid=1, vname='迪士尼公主', pic='c1.jpg', online='2020-01-12', author='tom', area='内陆', duration=160, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}]}, Video{vid=2, vname='test', pic='c2.jpg', online='2019-10-01', author='larry', area='欧美', duration=90, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=7, tname='科技'}]}, Video{vid=4, vname='冰雪女王4：魔镜世界', pic='bxnw.jpg', online='2018-09-07', author='tony', area='欧美', duration=120, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=1, tname='搞笑'}]}, Video{vid=5, vname='昨日奇迹', pic='zrqj.jpg', online='2017-10-23', author='张三', area='内陆', duration=72, power=3, state=2, videoPower=VideoPower{videoPower_id=3, videoPower_name='可下载'}, type=[Type{tid=1, tname='搞笑'}]}, Video{vid=6, vname='哪吒之魔童降世', pic='nz.jpg', online='2019-08-09', author='饺子', area='内陆', duration=60, power=4, state=2, videoPower=VideoPower{videoPower_id=4, videoPower_name='收费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=7, vname='银河补习班', pic='yhbxb.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=3, tname='生活'}]}, Video{vid=8, vname='送我上青云', pic='swsqy.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=3, tname='生活'}]}, Video{vid=9, vname='鼠胆英雄', pic='sdyx.jpg', online='2019-08-09', author='罗菲', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=9, tname='惊悚'}]}, Video{vid=10, vname='八子', pic='bz.jpg', online='2019-08-09', author='王福', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=11, vname='愤怒的小鸟2', pic='fndxn.jpg', online='2019-08-09', author='tony', area='欧美', duration=60, power=4, state=2, videoPower=VideoPower{videoPower_id=4, videoPower_name='收费'}, type=[Type{tid=7, tname='科技'}]}, Video{vid=12, vname='速度与激情：特别行动', pic='sdyjq.jpg', online='2019-08-09', author='tony', area='欧美', duration=60, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=13, vname='铤而走险', pic='tezx.jpg', online='2019-07-18', author='张天师', area='港台', duration=60, power=3, state=2, videoPower=VideoPower{videoPower_id=3, videoPower_name='可下载'}, type=[Type{tid=8, tname='鬼畜'}]}], recommendlist=Page{count=true, pageNum=1, pageSize=8, startRow=0, endRow=8, total=17, pages=3, reasonable=false, pageSizeZero=false}[Video{vid=1, vname='迪士尼公主', pic='c1.jpg', online='2020-01-12', author='tom', area='内陆', duration=160, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}]}, Video{vid=2, vname='test', pic='c2.jpg', online='2019-10-01', author='larry', area='欧美', duration=90, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=7, tname='科技'}]}, Video{vid=6, vname='哪吒之魔童降世', pic='nz.jpg', online='2019-08-09', author='饺子', area='内陆', duration=60, power=4, state=2, videoPower=VideoPower{videoPower_id=4, videoPower_name='收费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=7, vname='银河补习班', pic='yhbxb.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=3, tname='生活'}]}, Video{vid=8, vname='送我上青云', pic='swsqy.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=3, tname='生活'}]}, Video{vid=9, vname='鼠胆英雄', pic='sdyx.jpg', online='2019-08-09', author='罗菲', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=9, tname='惊悚'}]}, Video{vid=10, vname='八子', pic='bz.jpg', online='2019-08-09', author='王福', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=11, vname='愤怒的小鸟2', pic='fndxn.jpg', online='2019-08-09', author='tony', area='欧美', duration=60, power=4, state=2, videoPower=VideoPower{videoPower_id=4, videoPower_name='收费'}, type=[Type{tid=7, tname='科技'}]}], typelist=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}, Type{tid=3, tname='生活'}, Type{tid=4, tname='美食'}, Type{tid=5, tname='财经'}, Type{tid=6, tname='数码'}, Type{tid=7, tname='科技'}, Type{tid=8, tname='鬼畜'}, Type{tid=9, tname='惊悚'}, Type{tid=10, tname='国创'}]}
2020-03-29 15:01:03 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/main.jsp]
2020-03-29 15:01:03 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 15:27:31 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/video/queryByType/1", parameters={}
2020-03-29 15:27:32 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.VideoController#queryByType(Integer)
2020-03-29 15:27:36 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.TypeServiceImpl.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 15:27:37 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:27:37 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 15:27:37 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:27:37 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:27:37 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a91d763]
2020-03-29 15:27:37 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:27:37 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from type 
2020-03-29 15:27:37 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-29 15:27:38 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 10
2020-03-29 15:27:38 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a91d763]
2020-03-29 15:27:38 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a91d763]
2020-03-29 15:27:38 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a91d763]
2020-03-29 15:27:38 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a91d763]
2020-03-29 15:27:38 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:27:38 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:27:38 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:27:38 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:27:38 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.TypeManageServiceImpl.queryByType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 15:27:38 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:27:38 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:27:38 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:27:38 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1774e6a]
2020-03-29 15:27:38 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:27:38 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select type_id tid,video_id vid from typemanage where type_id = ? 
2020-03-29 15:27:38 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 1(Integer)
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 5
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1774e6a]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1774e6a]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1774e6a]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1774e6a]
2020-03-29 15:27:39 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:27:39 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.get]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@305483b1]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and v.video_id = ? 
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 1(Integer)
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 1(Integer)
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 2
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@305483b1]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@305483b1]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@305483b1]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@305483b1]
2020-03-29 15:27:39 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:27:39 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.get]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dd535bc]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and v.video_id = ? 
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 4(Integer)
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 4(Integer)
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dd535bc]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dd535bc]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dd535bc]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dd535bc]
2020-03-29 15:27:39 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:27:39 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.get]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53b55381]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and v.video_id = ? 
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 5(Integer)
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 5(Integer)
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53b55381]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53b55381]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53b55381]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53b55381]
2020-03-29 15:27:39 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:27:39 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.get]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21f34e81]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and v.video_id = ? 
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 16(Integer)
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 16(Integer)
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21f34e81]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21f34e81]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21f34e81]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21f34e81]
2020-03-29 15:27:39 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:27:39 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.get]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16f710c2]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and v.video_id = ? 
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 18(Integer)
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 18(Integer)
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:27:39 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16f710c2]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16f710c2]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16f710c2]
2020-03-29 15:27:39 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16f710c2]
2020-03-29 15:27:39 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:27:39 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:27:39 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {videoList=[Video{vid=1, vname='迪士尼公主', pic='c1.jpg', online='2020-01-12', author='tom', area='内陆', duration=160, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}]}, Video{vid=4, vname='冰雪女王4：魔镜世界', pic='bxnw.jpg', online='2018-09-07', author='tony', area='欧美', duration=120, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=1, tname='搞笑'}]}, Video{vid=5, vname='昨日奇迹', pic='zrqj.jpg', online='2017-10-23', author='张三', area='内陆', duration=72, power=3, state=2, videoPower=VideoPower{videoPower_id=3, videoPower_name='可下载'}, type=[Type{tid=1, tname='搞笑'}]}, Video{vid=16, vname='神奇马戏团', pic='sqmxt.jpg', online='2019-07-18', author='迈克逊', area='欧美', duration=60, power=3, state=2, videoPower=VideoPower{videoPower_id=3, videoPower_name='可下载'}, type=[Type{tid=1, tname='搞笑'}]}, Video{vid=18, vname='狮子王', pic='szw.jpg', online='2019-06-21', author='迈克逊', area='欧美', duration=60, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=1, tname='搞笑'}]}], typelist=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}, Type{tid=3, tname='生活'}, Type{tid=4, tname='美食'}, Type{tid=5, tname='财经'}, Type{tid=6, tname='数码'}, Type{tid=7, tname='科技'}, Type{tid=8, tname='鬼畜'}, Type{tid=9, tname='惊悚'}, Type{tid=10, tname='国创'}], type=1}
2020-03-29 15:27:39 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/videoList.jsp]
2020-03-29 15:27:42 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 15:27:45 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/images/szw.jpg", parameters={}
2020-03-29 15:27:45 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/images/sqmxt.jpg", parameters={}
2020-03-29 15:27:45 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 15:27:45 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 15:27:45 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 15:27:45 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 15:28:05 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/video/queryByType/2", parameters={}
2020-03-29 15:28:05 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.VideoController#queryByType(Integer)
2020-03-29 15:28:05 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.TypeServiceImpl.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4748e97a]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from type 
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 10
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4748e97a]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4748e97a]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4748e97a]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4748e97a]
2020-03-29 15:28:05 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:28:05 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.TypeManageServiceImpl.queryByType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c3cfe2c]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select type_id tid,video_id vid from typemanage where type_id = ? 
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 2(Integer)
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 5
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c3cfe2c]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c3cfe2c]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c3cfe2c]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c3cfe2c]
2020-03-29 15:28:05 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:28:05 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.get]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5882f578]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and v.video_id = ? 
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 1(Integer)
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 1(Integer)
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 2
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5882f578]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5882f578]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5882f578]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5882f578]
2020-03-29 15:28:05 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:28:05 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.get]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26c4442d]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and v.video_id = ? 
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 3(Integer)
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 3(Integer)
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26c4442d]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26c4442d]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26c4442d]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26c4442d]
2020-03-29 15:28:05 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:28:05 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.get]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@622af0bc]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and v.video_id = ? 
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 6(Integer)
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 6(Integer)
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@622af0bc]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@622af0bc]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@622af0bc]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@622af0bc]
2020-03-29 15:28:05 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:28:05 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.get]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f1a26e4]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and v.video_id = ? 
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 10(Integer)
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 10(Integer)
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f1a26e4]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f1a26e4]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f1a26e4]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f1a26e4]
2020-03-29 15:28:05 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:28:05 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.get]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c3dde2c]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and v.video_id = ? 
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 12(Integer)
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 12(Integer)
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:28:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c3dde2c]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c3dde2c]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c3dde2c]
2020-03-29 15:28:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c3dde2c]
2020-03-29 15:28:05 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:28:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:28:05 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {videoList=[Video{vid=1, vname='迪士尼公主', pic='c1.jpg', online='2020-01-12', author='tom', area='内陆', duration=160, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}]}, Video{vid=6, vname='哪吒之魔童降世', pic='nz.jpg', online='2019-08-09', author='饺子', area='内陆', duration=60, power=4, state=2, videoPower=VideoPower{videoPower_id=4, videoPower_name='收费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=10, vname='八子', pic='bz.jpg', online='2019-08-09', author='王福', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=12, vname='速度与激情：特别行动', pic='sdyjq.jpg', online='2019-08-09', author='tony', area='欧美', duration=60, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=2, tname='动作'}]}], typelist=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}, Type{tid=3, tname='生活'}, Type{tid=4, tname='美食'}, Type{tid=5, tname='财经'}, Type{tid=6, tname='数码'}, Type{tid=7, tname='科技'}, Type{tid=8, tname='鬼畜'}, Type{tid=9, tname='惊悚'}, Type{tid=10, tname='国创'}], type=2}
2020-03-29 15:28:05 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/videoList.jsp]
2020-03-29 15:28:05 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 15:28:57 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/video/seach?vname=%E9%93%B6%E6%B2%B3", parameters={masked}
2020-03-29 15:28:57 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.VideoController#seach(Video)
2020-03-29 15:28:57 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.TypeServiceImpl.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 15:28:57 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:28:57 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 15:28:57 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:28:57 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:28:57 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c1ac443]
2020-03-29 15:28:57 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:28:57 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from type 
2020-03-29 15:28:57 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-29 15:28:57 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 10
2020-03-29 15:28:57 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c1ac443]
2020-03-29 15:28:57 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c1ac443]
2020-03-29 15:28:57 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c1ac443]
2020-03-29 15:28:57 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c1ac443]
2020-03-29 15:28:57 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:28:57 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:28:57 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:28:57 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:28:57 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 15:28:57 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:28:57 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 15:28:57 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:28:57 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:28:57 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5519ec50]
2020-03-29 15:28:58 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:28:58 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and video_name like concat('%',?,'%') and state = ? 
2020-03-29 15:28:58 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 银河(String), 2(Integer)
2020-03-29 15:28:58 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:28:58 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 7(Integer)
2020-03-29 15:28:58 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:28:58 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 15:28:58 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5519ec50]
2020-03-29 15:28:58 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5519ec50]
2020-03-29 15:28:58 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5519ec50]
2020-03-29 15:28:58 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5519ec50]
2020-03-29 15:28:58 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:28:58 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:28:58 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:28:58 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:28:58 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {video=Video{vid=null, vname='银河', pic='null', online='null', author='null', area='null', duration=null, power=null, state=2, videoPower=null, type=null}, org.springframework.validation.BindingResult.video=org.springframework.validation.BeanPropertyBindingResult: 0 errors, videoList=[Video{vid=7, vname='银河补习班', pic='yhbxb.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=3, tname='生活'}]}], typelist=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}, Type{tid=3, tname='生活'}, Type{tid=4, tname='美食'}, Type{tid=5, tname='财经'}, Type{tid=6, tname='数码'}, Type{tid=7, tname='科技'}, Type{tid=8, tname='鬼畜'}, Type{tid=9, tname='惊悚'}, Type{tid=10, tname='国创'}]}
2020-03-29 15:28:58 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/videoList.jsp]
2020-03-29 15:28:58 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 15:32:54 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/video/indexQuery", parameters={}
2020-03-29 15:32:54 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.VideoController#indexQuery()
2020-03-29 15:32:54 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.TypeServiceImpl.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 15:32:54 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:32:54 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 15:32:54 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:32:54 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:32:55 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49032d14]
2020-03-29 15:32:55 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from type 
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 10
2020-03-29 15:32:55 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49032d14]
2020-03-29 15:32:55 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49032d14]
2020-03-29 15:32:55 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49032d14]
2020-03-29 15:32:55 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49032d14]
2020-03-29 15:32:55 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:32:55 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:32:55 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:32:55 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:32:55 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.recommend]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 15:32:55 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:32:55 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:32:55 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:32:55 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28f11bc4]
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.cache.decorators.LoggingCache.getObject(LoggingCache.java:60) - Cache Hit Ratio [SQL_CACHE]: 0.6
2020-03-29 15:32:55 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: SELECT count(0) FROM video v, videopower vp WHERE v.power = vp.videopower_id AND state = 2 
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and state = 2 order by online desc LIMIT ? 
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 8(Integer)
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 1(Integer)
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 2
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 2(Integer)
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 6(Integer)
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 7(Integer)
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 8(Integer)
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 9(Integer)
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 10(Integer)
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 11(Integer)
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 8
2020-03-29 15:32:55 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28f11bc4]
2020-03-29 15:32:55 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28f11bc4]
2020-03-29 15:32:55 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28f11bc4]
2020-03-29 15:32:55 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28f11bc4]
2020-03-29 15:32:55 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:32:55 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:32:55 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:32:55 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.pageQuery]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 15:32:55 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:32:55 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:32:55 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:32:55 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ad7353a]
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.cache.decorators.LoggingCache.getObject(LoggingCache.java:60) - Cache Hit Ratio [SQL_CACHE]: 0.6666666666666666
2020-03-29 15:32:55 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: SELECT count(0) FROM video v, videopower vp WHERE v.power = vp.videopower_id AND state = ? 
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 2(Integer)
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and state = ? LIMIT ? 
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 2(Integer), 12(Integer)
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 1(Integer)
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 2
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 2(Integer)
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 4(Integer)
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 5(Integer)
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 6(Integer)
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 7(Integer)
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:32:55 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 8(Integer)
2020-03-29 15:32:56 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:32:56 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:32:56 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 9(Integer)
2020-03-29 15:32:56 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:32:56 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:32:56 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 10(Integer)
2020-03-29 15:32:56 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:32:56 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:32:56 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 11(Integer)
2020-03-29 15:32:56 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:32:56 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:32:56 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 12(Integer)
2020-03-29 15:32:56 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:32:56 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:32:56 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 13(Integer)
2020-03-29 15:32:56 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:32:56 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 12
2020-03-29 15:32:56 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ad7353a]
2020-03-29 15:32:56 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ad7353a]
2020-03-29 15:32:56 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ad7353a]
2020-03-29 15:32:56 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ad7353a]
2020-03-29 15:32:56 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:32:56 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:32:56 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:32:56 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {hotlist=Page{count=true, pageNum=1, pageSize=12, startRow=0, endRow=12, total=17, pages=2, reasonable=false, pageSizeZero=false}[Video{vid=1, vname='迪士尼公主', pic='c1.jpg', online='2020-01-12', author='tom', area='内陆', duration=160, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}]}, Video{vid=2, vname='test', pic='c2.jpg', online='2019-10-01', author='larry', area='欧美', duration=90, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=7, tname='科技'}]}, Video{vid=4, vname='冰雪女王4：魔镜世界', pic='bxnw.jpg', online='2018-09-07', author='tony', area='欧美', duration=120, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=1, tname='搞笑'}]}, Video{vid=5, vname='昨日奇迹', pic='zrqj.jpg', online='2017-10-23', author='张三', area='内陆', duration=72, power=3, state=2, videoPower=VideoPower{videoPower_id=3, videoPower_name='可下载'}, type=[Type{tid=1, tname='搞笑'}]}, Video{vid=6, vname='哪吒之魔童降世', pic='nz.jpg', online='2019-08-09', author='饺子', area='内陆', duration=60, power=4, state=2, videoPower=VideoPower{videoPower_id=4, videoPower_name='收费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=7, vname='银河补习班', pic='yhbxb.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=3, tname='生活'}]}, Video{vid=8, vname='送我上青云', pic='swsqy.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=3, tname='生活'}]}, Video{vid=9, vname='鼠胆英雄', pic='sdyx.jpg', online='2019-08-09', author='罗菲', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=9, tname='惊悚'}]}, Video{vid=10, vname='八子', pic='bz.jpg', online='2019-08-09', author='王福', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=11, vname='愤怒的小鸟2', pic='fndxn.jpg', online='2019-08-09', author='tony', area='欧美', duration=60, power=4, state=2, videoPower=VideoPower{videoPower_id=4, videoPower_name='收费'}, type=[Type{tid=7, tname='科技'}]}, Video{vid=12, vname='速度与激情：特别行动', pic='sdyjq.jpg', online='2019-08-09', author='tony', area='欧美', duration=60, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=13, vname='铤而走险', pic='tezx.jpg', online='2019-07-18', author='张天师', area='港台', duration=60, power=3, state=2, videoPower=VideoPower{videoPower_id=3, videoPower_name='可下载'}, type=[Type{tid=8, tname='鬼畜'}]}], recommendlist=Page{count=true, pageNum=1, pageSize=8, startRow=0, endRow=8, total=17, pages=3, reasonable=false, pageSizeZero=false}[Video{vid=1, vname='迪士尼公主', pic='c1.jpg', online='2020-01-12', author='tom', area='内陆', duration=160, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}]}, Video{vid=2, vname='test', pic='c2.jpg', online='2019-10-01', author='larry', area='欧美', duration=90, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=7, tname='科技'}]}, Video{vid=6, vname='哪吒之魔童降世', pic='nz.jpg', online='2019-08-09', author='饺子', area='内陆', duration=60, power=4, state=2, videoPower=VideoPower{videoPower_id=4, videoPower_name='收费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=7, vname='银河补习班', pic='yhbxb.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=3, tname='生活'}]}, Video{vid=8, vname='送我上青云', pic='swsqy.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=3, tname='生活'}]}, Video{vid=9, vname='鼠胆英雄', pic='sdyx.jpg', online='2019-08-09', author='罗菲', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=9, tname='惊悚'}]}, Video{vid=10, vname='八子', pic='bz.jpg', online='2019-08-09', author='王福', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=11, vname='愤怒的小鸟2', pic='fndxn.jpg', online='2019-08-09', author='tony', area='欧美', duration=60, power=4, state=2, videoPower=VideoPower{videoPower_id=4, videoPower_name='收费'}, type=[Type{tid=7, tname='科技'}]}], typelist=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}, Type{tid=3, tname='生活'}, Type{tid=4, tname='美食'}, Type{tid=5, tname='财经'}, Type{tid=6, tname='数码'}, Type{tid=7, tname='科技'}, Type{tid=8, tname='鬼畜'}, Type{tid=9, tname='惊悚'}, Type{tid=10, tname='国创'}]}
2020-03-29 15:32:56 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/main.jsp]
2020-03-29 15:32:58 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 15:40:07 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/video/frontGet/4", parameters={}
2020-03-29 15:40:07 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.VideoController#get1(Integer)
2020-03-29 15:40:07 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.TypeServiceImpl.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 15:40:07 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:40:07 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 15:40:07 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:40:07 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:40:07 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@95b4b4a]
2020-03-29 15:40:07 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:40:07 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from type 
2020-03-29 15:40:07 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-29 15:40:07 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 10
2020-03-29 15:40:07 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@95b4b4a]
2020-03-29 15:40:07 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@95b4b4a]
2020-03-29 15:40:07 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@95b4b4a]
2020-03-29 15:40:07 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@95b4b4a]
2020-03-29 15:40:07 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:40:07 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:40:07 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:40:07 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:40:07 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.get]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 15:40:07 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:40:07 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 15:40:07 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:40:07 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:40:07 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60430187]
2020-03-29 15:40:07 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:40:07 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and v.video_id = ? 
2020-03-29 15:40:07 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 4(Integer)
2020-03-29 15:40:07 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:40:07 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 4(Integer)
2020-03-29 15:40:07 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:40:07 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 15:40:07 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60430187]
2020-03-29 15:40:07 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60430187]
2020-03-29 15:40:07 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60430187]
2020-03-29 15:40:07 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60430187]
2020-03-29 15:40:07 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:40:07 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:40:07 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:40:07 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:40:07 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {v=Video{vid=4, vname='冰雪女王4：魔镜世界', pic='bxnw.jpg', online='2018-09-07', author='tony', area='欧美', duration=120, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=1, tname='搞笑'}]}, typelist=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}, Type{tid=3, tname='生活'}, Type{tid=4, tname='美食'}, Type{tid=5, tname='财经'}, Type{tid=6, tname='数码'}, Type{tid=7, tname='科技'}, Type{tid=8, tname='鬼畜'}, Type{tid=9, tname='惊悚'}, Type{tid=10, tname='国创'}], org.springframework.validation.BindingResult.v=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2020-03-29 15:40:07 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/videoDetail.jsp]
2020-03-29 15:40:08 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 15:41:43 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/videoManage/favorites/add", parameters={masked}
2020-03-29 15:41:43 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.FavoritesController#add(Favorites)
2020-03-29 15:41:43 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.FavoritesServiceImpl.judge]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 15:41:43 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:41:43 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:41:43 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:41:43 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b9e906b]
2020-03-29 15:41:43 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:41:43 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select user_id uid,video_id vid from favorites where user_id = ? and video_id = ? 
2020-03-29 15:41:43 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 12(Integer), 4(Integer)
2020-03-29 15:41:44 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 0
2020-03-29 15:41:44 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b9e906b]
2020-03-29 15:41:44 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b9e906b]
2020-03-29 15:41:44 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b9e906b]
2020-03-29 15:41:44 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b9e906b]
2020-03-29 15:41:44 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:41:44 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:41:44 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:41:44 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.FavoritesServiceImpl.add]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 15:41:44 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:41:44 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:41:44 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:41:44 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d2a3f03]
2020-03-29 15:41:44 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:41:44 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: insert into favorites(user_id,video_id,createtime) values(?,?,?) 
2020-03-29 15:41:44 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 12(Integer), 4(Integer), 2020-03-29(String)
2020-03-29 15:41:45 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==    Updates: 1
2020-03-29 15:41:45 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d2a3f03]
2020-03-29 15:41:45 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d2a3f03]
2020-03-29 15:41:45 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d2a3f03]
2020-03-29 15:41:45 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d2a3f03]
2020-03-29 15:41:45 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:41:45 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:41:45 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:41:46 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/videoManage/favorites/add", parameters={masked}
2020-03-29 15:41:46 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.FavoritesController#add(Favorites)
2020-03-29 15:41:46 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.FavoritesServiceImpl.judge]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 15:41:46 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:41:46 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:41:46 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:41:46 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fc22344]
2020-03-29 15:41:46 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:41:46 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select user_id uid,video_id vid from favorites where user_id = ? and video_id = ? 
2020-03-29 15:41:46 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 12(Integer), 4(Integer)
2020-03-29 15:41:47 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 15:41:47 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fc22344]
2020-03-29 15:41:47 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fc22344]
2020-03-29 15:41:47 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fc22344]
2020-03-29 15:41:47 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fc22344]
2020-03-29 15:41:47 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:41:47 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:41:47 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:41:47 [DEBUG]-org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [application/json, text/javascript, */*;q=0.01] and supported [text/plain, */*, application/json, application/*+json]
2020-03-29 15:41:47 [DEBUG]-org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [application/json, text/javascript, */*;q=0.01] and supported [text/plain, */*, application/json, application/*+json]
2020-03-29 15:41:47 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing ["{"msg":"收藏成功！"}"]
2020-03-29 15:41:47 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing ["{"msg":"该视频已收藏！"}"]
2020-03-29 15:41:48 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 15:41:48 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 15:42:33 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/videoManage/favorites/add", parameters={masked}
2020-03-29 15:42:33 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.FavoritesController#add(Favorites)
2020-03-29 15:42:33 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.FavoritesServiceImpl.judge]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 15:42:33 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:42:33 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:42:33 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:42:33 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c0c7e5e]
2020-03-29 15:42:33 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:42:33 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select user_id uid,video_id vid from favorites where user_id = ? and video_id = ? 
2020-03-29 15:42:33 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 12(Integer), 4(Integer)
2020-03-29 15:42:33 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 15:42:33 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c0c7e5e]
2020-03-29 15:42:33 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c0c7e5e]
2020-03-29 15:42:33 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c0c7e5e]
2020-03-29 15:42:33 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c0c7e5e]
2020-03-29 15:42:33 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:42:33 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:42:33 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:42:33 [DEBUG]-org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [application/json, text/javascript, */*;q=0.01] and supported [text/plain, */*, application/json, application/*+json]
2020-03-29 15:42:33 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing ["{"msg":"该视频已收藏！"}"]
2020-03-29 15:42:33 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 15:56:17 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/user/userget/12", parameters={}
2020-03-29 15:56:17 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.UserController#get1(Integer)
2020-03-29 15:56:17 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.UserServiceImpl.get]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 15:56:17 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:56:17 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 15:56:17 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:56:17 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:56:17 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72cbaadb]
2020-03-29 15:56:17 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:56:17 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from user u,userpower up, power p where u.user_id = p.user_id and p.userpower_id = up.userpower_id and u.user_id = ? 
2020-03-29 15:56:17 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 12(Integer)
2020-03-29 15:56:18 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 15:56:18 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72cbaadb]
2020-03-29 15:56:18 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72cbaadb]
2020-03-29 15:56:18 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72cbaadb]
2020-03-29 15:56:18 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72cbaadb]
2020-03-29 15:56:18 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:56:18 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:56:18 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:56:18 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:56:18 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {u=User{uid=12, uname='user2', password='user2', sex='男', phone='12345368259', email='1234567890@163.com', state=1, userPower=Power{uid=12, upid=2, old=null, startTime='2020-02-02', duration=180, upstate=1, power=UserPower{userPower_id=2, userPower_name='普通用户'}}}, org.springframework.validation.BindingResult.u=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2020-03-29 15:56:18 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/userDetail.jsp]
2020-03-29 15:56:25 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 15:56:26 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/js/jquery.formjson.js", parameters={}
2020-03-29 15:56:26 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/js/jquery.form.js", parameters={}
2020-03-29 15:56:26 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 15:56:26 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 15:56:26 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 15:56:26 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 15:56:48 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/video/indexQuery", parameters={}
2020-03-29 15:56:48 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.VideoController#indexQuery()
2020-03-29 15:56:48 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.TypeServiceImpl.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 15:56:48 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:56:48 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 15:56:48 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:56:48 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:56:48 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@607b986b]
2020-03-29 15:56:48 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:56:48 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from type 
2020-03-29 15:56:48 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-29 15:56:48 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 10
2020-03-29 15:56:48 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@607b986b]
2020-03-29 15:56:48 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@607b986b]
2020-03-29 15:56:48 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@607b986b]
2020-03-29 15:56:48 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@607b986b]
2020-03-29 15:56:48 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:56:48 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:56:48 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:56:48 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:56:48 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.recommend]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 15:56:48 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:56:48 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:56:48 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:56:48 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27110f23]
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.cache.decorators.LoggingCache.getObject(LoggingCache.java:60) - Cache Hit Ratio [SQL_CACHE]: 0.7142857142857143
2020-03-29 15:56:49 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: SELECT count(0) FROM video v, videopower vp WHERE v.power = vp.videopower_id AND state = 2 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and state = 2 order by online desc LIMIT ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 8(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 1(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 2
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 2(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 6(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 7(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 8(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 9(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 10(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 11(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 8
2020-03-29 15:56:49 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27110f23]
2020-03-29 15:56:49 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27110f23]
2020-03-29 15:56:49 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27110f23]
2020-03-29 15:56:49 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27110f23]
2020-03-29 15:56:49 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:56:49 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:56:49 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:56:49 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.VideoServiceImpl.pageQuery]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 15:56:49 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 15:56:49 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 15:56:49 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 15:56:49 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2aa737a8]
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.cache.decorators.LoggingCache.getObject(LoggingCache.java:60) - Cache Hit Ratio [SQL_CACHE]: 0.75
2020-03-29 15:56:49 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: SELECT count(0) FROM video v, videopower vp WHERE v.power = vp.videopower_id AND state = ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 2(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from video v,videopower vp where v.power = vp.videopower_id and state = ? LIMIT ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 2(Integer), 12(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 1(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 2
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 2(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 4(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 5(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 6(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 7(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 8(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 9(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 10(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 11(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 12(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====>  Preparing: select type.type_id tid, type.type_name tname from type,typemanage where type.type_id = typemanage.type_id and typemanage.video_id = ? 
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ====> Parameters: 13(Integer)
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <====      Total: 1
2020-03-29 15:56:49 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 12
2020-03-29 15:56:49 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2aa737a8]
2020-03-29 15:56:49 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2aa737a8]
2020-03-29 15:56:49 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2aa737a8]
2020-03-29 15:56:49 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2aa737a8]
2020-03-29 15:56:49 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 15:56:49 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 15:56:49 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 15:56:49 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {hotlist=Page{count=true, pageNum=1, pageSize=12, startRow=0, endRow=12, total=17, pages=2, reasonable=false, pageSizeZero=false}[Video{vid=1, vname='迪士尼公主', pic='c1.jpg', online='2020-01-12', author='tom', area='内陆', duration=160, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}]}, Video{vid=2, vname='test', pic='c2.jpg', online='2019-10-01', author='larry', area='欧美', duration=90, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=7, tname='科技'}]}, Video{vid=4, vname='冰雪女王4：魔镜世界', pic='bxnw.jpg', online='2018-09-07', author='tony', area='欧美', duration=120, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=1, tname='搞笑'}]}, Video{vid=5, vname='昨日奇迹', pic='zrqj.jpg', online='2017-10-23', author='张三', area='内陆', duration=72, power=3, state=2, videoPower=VideoPower{videoPower_id=3, videoPower_name='可下载'}, type=[Type{tid=1, tname='搞笑'}]}, Video{vid=6, vname='哪吒之魔童降世', pic='nz.jpg', online='2019-08-09', author='饺子', area='内陆', duration=60, power=4, state=2, videoPower=VideoPower{videoPower_id=4, videoPower_name='收费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=7, vname='银河补习班', pic='yhbxb.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=3, tname='生活'}]}, Video{vid=8, vname='送我上青云', pic='swsqy.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=3, tname='生活'}]}, Video{vid=9, vname='鼠胆英雄', pic='sdyx.jpg', online='2019-08-09', author='罗菲', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=9, tname='惊悚'}]}, Video{vid=10, vname='八子', pic='bz.jpg', online='2019-08-09', author='王福', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=11, vname='愤怒的小鸟2', pic='fndxn.jpg', online='2019-08-09', author='tony', area='欧美', duration=60, power=4, state=2, videoPower=VideoPower{videoPower_id=4, videoPower_name='收费'}, type=[Type{tid=7, tname='科技'}]}, Video{vid=12, vname='速度与激情：特别行动', pic='sdyjq.jpg', online='2019-08-09', author='tony', area='欧美', duration=60, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=13, vname='铤而走险', pic='tezx.jpg', online='2019-07-18', author='张天师', area='港台', duration=60, power=3, state=2, videoPower=VideoPower{videoPower_id=3, videoPower_name='可下载'}, type=[Type{tid=8, tname='鬼畜'}]}], recommendlist=Page{count=true, pageNum=1, pageSize=8, startRow=0, endRow=8, total=17, pages=3, reasonable=false, pageSizeZero=false}[Video{vid=1, vname='迪士尼公主', pic='c1.jpg', online='2020-01-12', author='tom', area='内陆', duration=160, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}]}, Video{vid=2, vname='test', pic='c2.jpg', online='2019-10-01', author='larry', area='欧美', duration=90, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=7, tname='科技'}]}, Video{vid=6, vname='哪吒之魔童降世', pic='nz.jpg', online='2019-08-09', author='饺子', area='内陆', duration=60, power=4, state=2, videoPower=VideoPower{videoPower_id=4, videoPower_name='收费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=7, vname='银河补习班', pic='yhbxb.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=2, state=2, videoPower=VideoPower{videoPower_id=2, videoPower_name='VIP'}, type=[Type{tid=3, tname='生活'}]}, Video{vid=8, vname='送我上青云', pic='swsqy.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=3, tname='生活'}]}, Video{vid=9, vname='鼠胆英雄', pic='sdyx.jpg', online='2019-08-09', author='罗菲', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=9, tname='惊悚'}]}, Video{vid=10, vname='八子', pic='bz.jpg', online='2019-08-09', author='王福', area='港台', duration=60, power=1, state=2, videoPower=VideoPower{videoPower_id=1, videoPower_name='免费'}, type=[Type{tid=2, tname='动作'}]}, Video{vid=11, vname='愤怒的小鸟2', pic='fndxn.jpg', online='2019-08-09', author='tony', area='欧美', duration=60, power=4, state=2, videoPower=VideoPower{videoPower_id=4, videoPower_name='收费'}, type=[Type{tid=7, tname='科技'}]}], typelist=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}, Type{tid=3, tname='生活'}, Type{tid=4, tname='美食'}, Type{tid=5, tname='财经'}, Type{tid=6, tname='数码'}, Type{tid=7, tname='科技'}, Type{tid=8, tname='鬼畜'}, Type{tid=9, tname='惊悚'}, Type{tid=10, tname='国创'}]}
2020-03-29 15:56:49 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/main.jsp]
2020-03-29 15:56:50 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 16:07:36 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/favorites/get/12", parameters={}
2020-03-29 16:07:36 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.FavoritesController#get(Integer)
2020-03-29 16:07:37 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.TypeServiceImpl.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 16:07:37 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 16:07:37 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 16:07:37 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 16:07:37 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 16:07:37 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@475c29cf]
2020-03-29 16:07:37 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 16:07:37 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from type 
2020-03-29 16:07:37 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-29 16:07:38 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 10
2020-03-29 16:07:38 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@475c29cf]
2020-03-29 16:07:38 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@475c29cf]
2020-03-29 16:07:38 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@475c29cf]
2020-03-29 16:07:38 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@475c29cf]
2020-03-29 16:07:38 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 16:07:38 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:07:38 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:07:38 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 16:07:38 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.FavoritesServiceImpl.get]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 16:07:38 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 16:07:38 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 16:07:38 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 16:07:38 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 16:07:38 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ca195ef]
2020-03-29 16:07:38 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 16:07:38 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from favorites f,video v, user u where f.user_id = u.user_id and f.video_id = v.video_id and u.user_id = ? 
2020-03-29 16:07:38 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 12(Integer)
2020-03-29 16:07:38 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 3
2020-03-29 16:07:38 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ca195ef]
2020-03-29 16:07:38 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ca195ef]
2020-03-29 16:07:38 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ca195ef]
2020-03-29 16:07:38 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ca195ef]
2020-03-29 16:07:38 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 16:07:38 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:07:38 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:07:38 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 16:07:38 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {list=[Favorites{uid=12, vid=1, createtime='2020-03-25', fstate='有效', user=User{uid=12, uname='user2', password='null', sex='null', phone='null', email='null', state=null, userPower=null}, video=Video{vid=1, vname='迪士尼公主', pic='c1.jpg', online='2020-01-12', author='tom', area='内陆', duration=160, power=null, state=2, videoPower=null, type=null}}, Favorites{uid=12, vid=4, createtime='2020-03-29', fstate='有效', user=User{uid=12, uname='user2', password='null', sex='null', phone='null', email='null', state=null, userPower=null}, video=Video{vid=4, vname='冰雪女王4：魔镜世界', pic='bxnw.jpg', online='2018-09-07', author='tony', area='欧美', duration=120, power=null, state=2, videoPower=null, type=null}}, Favorites{uid=12, vid=8, createtime='2020-03-24', fstate='有效', user=User{uid=12, uname='user2', password='null', sex='null', phone='null', email='null', state=null, userPower=null}, video=Video{vid=8, vname='送我上青云', pic='swsqy.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=null, state=2, videoPower=null, type=null}}], typelist=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}, Type{tid=3, tname='生活'}, Type{tid=4, tname='美食'}, Type{tid=5, tname='财经'}, Type{tid=6, tname='数码'}, Type{tid=7, tname='科技'}, Type{tid=8, tname='鬼畜'}, Type{tid=9, tname='惊悚'}, Type{tid=10, tname='国创'}]}
2020-03-29 16:07:38 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/favoritesList.jsp]
2020-03-29 16:07:43 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 16:09:25 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/favorites/get/12", parameters={}
2020-03-29 16:09:25 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.FavoritesController#get(Integer)
2020-03-29 16:09:25 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.TypeServiceImpl.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 16:09:25 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 16:09:25 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 16:09:25 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 16:09:25 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 16:09:25 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c966848]
2020-03-29 16:09:25 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 16:09:25 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from type 
2020-03-29 16:09:25 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-29 16:09:25 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 10
2020-03-29 16:09:25 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c966848]
2020-03-29 16:09:25 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c966848]
2020-03-29 16:09:25 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c966848]
2020-03-29 16:09:25 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c966848]
2020-03-29 16:09:25 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 16:09:25 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:09:25 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:09:25 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 16:09:25 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.FavoritesServiceImpl.get]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 16:09:25 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 16:09:25 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 16:09:25 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 16:09:25 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 16:09:25 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24a4ef11]
2020-03-29 16:09:25 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 16:09:25 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from favorites f,video v, user u where f.user_id = u.user_id and f.video_id = v.video_id and u.user_id = ? 
2020-03-29 16:09:25 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 12(Integer)
2020-03-29 16:09:25 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 3
2020-03-29 16:09:25 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24a4ef11]
2020-03-29 16:09:25 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24a4ef11]
2020-03-29 16:09:25 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24a4ef11]
2020-03-29 16:09:25 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24a4ef11]
2020-03-29 16:09:25 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 16:09:25 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:09:25 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:09:25 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 16:09:25 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {list=[Favorites{uid=12, vid=1, createtime='2020-03-25', fstate='有效', user=User{uid=12, uname='user2', password='null', sex='null', phone='null', email='null', state=null, userPower=null}, video=Video{vid=1, vname='迪士尼公主', pic='c1.jpg', online='2020-01-12', author='tom', area='内陆', duration=160, power=null, state=2, videoPower=null, type=null}}, Favorites{uid=12, vid=4, createtime='2020-03-29', fstate='有效', user=User{uid=12, uname='user2', password='null', sex='null', phone='null', email='null', state=null, userPower=null}, video=Video{vid=4, vname='冰雪女王4：魔镜世界', pic='bxnw.jpg', online='2018-09-07', author='tony', area='欧美', duration=120, power=null, state=2, videoPower=null, type=null}}, Favorites{uid=12, vid=8, createtime='2020-03-24', fstate='有效', user=User{uid=12, uname='user2', password='null', sex='null', phone='null', email='null', state=null, userPower=null}, video=Video{vid=8, vname='送我上青云', pic='swsqy.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=null, state=2, videoPower=null, type=null}}], typelist=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}, Type{tid=3, tname='生活'}, Type{tid=4, tname='美食'}, Type{tid=5, tname='财经'}, Type{tid=6, tname='数码'}, Type{tid=7, tname='科技'}, Type{tid=8, tname='鬼畜'}, Type{tid=9, tname='惊悚'}, Type{tid=10, tname='国创'}]}
2020-03-29 16:09:25 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/favoritesList.jsp]
2020-03-29 16:09:25 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 16:09:32 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/favorites/get/12", parameters={}
2020-03-29 16:09:32 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.FavoritesController#get(Integer)
2020-03-29 16:09:32 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.TypeServiceImpl.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 16:09:32 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 16:09:32 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 16:09:32 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 16:09:32 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 16:09:32 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7438dd34]
2020-03-29 16:09:32 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 16:09:32 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from type 
2020-03-29 16:09:32 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-29 16:09:32 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 10
2020-03-29 16:09:32 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7438dd34]
2020-03-29 16:09:32 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7438dd34]
2020-03-29 16:09:32 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7438dd34]
2020-03-29 16:09:32 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7438dd34]
2020-03-29 16:09:32 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 16:09:32 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:09:32 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:09:32 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 16:09:32 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.FavoritesServiceImpl.get]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 16:09:32 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 16:09:32 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 16:09:32 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 16:09:32 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 16:09:32 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61c20081]
2020-03-29 16:09:32 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 16:09:32 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from favorites f,video v, user u where f.user_id = u.user_id and f.video_id = v.video_id and u.user_id = ? 
2020-03-29 16:09:32 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 12(Integer)
2020-03-29 16:09:32 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 3
2020-03-29 16:09:32 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61c20081]
2020-03-29 16:09:32 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61c20081]
2020-03-29 16:09:32 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61c20081]
2020-03-29 16:09:32 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61c20081]
2020-03-29 16:09:32 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 16:09:32 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:09:32 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:09:32 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 16:09:32 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {list=[Favorites{uid=12, vid=1, createtime='2020-03-25', fstate='有效', user=User{uid=12, uname='user2', password='null', sex='null', phone='null', email='null', state=null, userPower=null}, video=Video{vid=1, vname='迪士尼公主', pic='c1.jpg', online='2020-01-12', author='tom', area='内陆', duration=160, power=null, state=2, videoPower=null, type=null}}, Favorites{uid=12, vid=4, createtime='2020-03-29', fstate='有效', user=User{uid=12, uname='user2', password='null', sex='null', phone='null', email='null', state=null, userPower=null}, video=Video{vid=4, vname='冰雪女王4：魔镜世界', pic='bxnw.jpg', online='2018-09-07', author='tony', area='欧美', duration=120, power=null, state=2, videoPower=null, type=null}}, Favorites{uid=12, vid=8, createtime='2020-03-24', fstate='有效', user=User{uid=12, uname='user2', password='null', sex='null', phone='null', email='null', state=null, userPower=null}, video=Video{vid=8, vname='送我上青云', pic='swsqy.jpg', online='2019-08-09', author='罗菲', area='内陆', duration=60, power=null, state=2, videoPower=null, type=null}}], typelist=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}, Type{tid=3, tname='生活'}, Type{tid=4, tname='美食'}, Type{tid=5, tname='财经'}, Type{tid=6, tname='数码'}, Type{tid=7, tname='科技'}, Type{tid=8, tname='鬼畜'}, Type{tid=9, tname='惊悚'}, Type{tid=10, tname='国创'}]}
2020-03-29 16:09:32 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/favoritesList.jsp]
2020-03-29 16:09:36 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 16:10:42 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/videoManage/favorites/del", parameters={masked}
2020-03-29 16:10:42 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.FavoritesController#del(Favorites)
2020-03-29 16:10:42 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.FavoritesServiceImpl.judge]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 16:10:42 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 16:10:42 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 16:10:42 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 16:10:42 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dff80c6]
2020-03-29 16:10:42 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 16:10:42 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select user_id uid,video_id vid from favorites where user_id = ? and video_id = ? 
2020-03-29 16:10:42 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 12(Integer), 8(Integer)
2020-03-29 16:10:42 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 16:10:42 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dff80c6]
2020-03-29 16:10:42 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dff80c6]
2020-03-29 16:10:42 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dff80c6]
2020-03-29 16:10:42 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dff80c6]
2020-03-29 16:10:42 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 16:10:42 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:10:42 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 16:10:42 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.FavoritesServiceImpl.del]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 16:10:42 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 16:10:42 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 16:10:42 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 16:10:42 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1634a6d]
2020-03-29 16:10:42 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 16:10:42 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: delete from favorites where user_id = ? and video_id = ? 
2020-03-29 16:10:42 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 12(Integer), 8(Integer)
2020-03-29 16:10:43 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==    Updates: 1
2020-03-29 16:10:43 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1634a6d]
2020-03-29 16:10:43 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1634a6d]
2020-03-29 16:10:43 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1634a6d]
2020-03-29 16:10:43 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1634a6d]
2020-03-29 16:10:43 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 16:10:43 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:10:44 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 16:10:44 [DEBUG]-org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:273) - Using 'application/json', given [application/json, text/javascript, */*;q=0.01] and supported [text/plain, */*, application/json, application/*+json]
2020-03-29 16:10:45 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - Writing ["{"msg":"取消收藏成功！"}"]
2020-03-29 16:10:45 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 16:20:12 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/favorites/get/12", parameters={}
2020-03-29 16:20:12 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.FavoritesController#get(Integer)
2020-03-29 16:20:13 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.TypeServiceImpl.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 16:20:14 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 16:20:14 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 16:20:15 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 16:20:15 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 16:20:15 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2116e448]
2020-03-29 16:20:15 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 16:20:15 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from type 
2020-03-29 16:20:15 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-29 16:20:15 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 10
2020-03-29 16:20:15 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2116e448]
2020-03-29 16:20:15 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2116e448]
2020-03-29 16:20:15 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2116e448]
2020-03-29 16:20:15 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2116e448]
2020-03-29 16:20:15 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 16:20:15 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:20:15 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:20:15 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 16:20:15 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.FavoritesServiceImpl.get]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 16:20:15 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 16:20:15 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 16:20:15 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 16:20:15 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 16:20:15 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dd95e7d]
2020-03-29 16:20:15 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 16:20:15 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from favorites f,video v, user u where f.user_id = u.user_id and f.video_id = v.video_id and u.user_id = ? 
2020-03-29 16:20:15 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 12(Integer)
2020-03-29 16:20:16 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 2
2020-03-29 16:20:16 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dd95e7d]
2020-03-29 16:20:16 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dd95e7d]
2020-03-29 16:20:16 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dd95e7d]
2020-03-29 16:20:16 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dd95e7d]
2020-03-29 16:20:16 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 16:20:16 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:20:16 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:20:16 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 16:20:16 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {list=[Favorites{uid=12, vid=1, createtime='2020-03-25', fstate='有效', user=User{uid=12, uname='user2', password='null', sex='null', phone='null', email='null', state=null, userPower=null}, video=Video{vid=1, vname='迪士尼公主', pic='c1.jpg', online='2020-01-12', author='tom', area='内陆', duration=160, power=null, state=2, videoPower=null, type=null}}, Favorites{uid=12, vid=4, createtime='2020-03-29', fstate='有效', user=User{uid=12, uname='user2', password='null', sex='null', phone='null', email='null', state=null, userPower=null}, video=Video{vid=4, vname='冰雪女王4：魔镜世界', pic='bxnw.jpg', online='2018-09-07', author='tony', area='欧美', duration=120, power=null, state=2, videoPower=null, type=null}}], typelist=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}, Type{tid=3, tname='生活'}, Type{tid=4, tname='美食'}, Type{tid=5, tname='财经'}, Type{tid=6, tname='数码'}, Type{tid=7, tname='科技'}, Type{tid=8, tname='鬼畜'}, Type{tid=9, tname='惊悚'}, Type{tid=10, tname='国创'}]}
2020-03-29 16:20:16 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/favoritesList.jsp]
2020-03-29 16:20:21 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 16:21:12 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/favorites/get/12", parameters={}
2020-03-29 16:21:12 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.FavoritesController#get(Integer)
2020-03-29 16:21:13 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.TypeServiceImpl.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 16:21:13 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 16:21:13 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 16:21:13 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 16:21:13 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 16:21:13 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54af7c11]
2020-03-29 16:21:13 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 16:21:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from type 
2020-03-29 16:21:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-29 16:21:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 10
2020-03-29 16:21:13 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54af7c11]
2020-03-29 16:21:13 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54af7c11]
2020-03-29 16:21:13 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54af7c11]
2020-03-29 16:21:13 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54af7c11]
2020-03-29 16:21:13 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 16:21:13 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:21:13 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:21:13 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 16:21:13 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.FavoritesServiceImpl.get]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 16:21:13 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 16:21:13 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 16:21:13 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 16:21:13 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 16:21:13 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b568d9f]
2020-03-29 16:21:13 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 16:21:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from favorites f,video v, user u where f.user_id = u.user_id and f.video_id = v.video_id and u.user_id = ? 
2020-03-29 16:21:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 12(Integer)
2020-03-29 16:21:13 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 2
2020-03-29 16:21:13 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b568d9f]
2020-03-29 16:21:13 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b568d9f]
2020-03-29 16:21:13 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b568d9f]
2020-03-29 16:21:13 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b568d9f]
2020-03-29 16:21:13 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 16:21:13 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:21:13 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:21:13 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 16:21:13 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {list=[Favorites{uid=12, vid=1, createtime='2020-03-25', fstate='有效', user=User{uid=12, uname='user2', password='null', sex='null', phone='null', email='null', state=null, userPower=null}, video=Video{vid=1, vname='迪士尼公主', pic='c1.jpg', online='2020-01-12', author='tom', area='内陆', duration=160, power=null, state=2, videoPower=null, type=null}}, Favorites{uid=12, vid=4, createtime='2020-03-29', fstate='有效', user=User{uid=12, uname='user2', password='null', sex='null', phone='null', email='null', state=null, userPower=null}, video=Video{vid=4, vname='冰雪女王4：魔镜世界', pic='bxnw.jpg', online='2018-09-07', author='tony', area='欧美', duration=120, power=null, state=2, videoPower=null, type=null}}], typelist=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}, Type{tid=3, tname='生活'}, Type{tid=4, tname='美食'}, Type{tid=5, tname='财经'}, Type{tid=6, tname='数码'}, Type{tid=7, tname='科技'}, Type{tid=8, tname='鬼畜'}, Type{tid=9, tname='惊悚'}, Type{tid=10, tname='国创'}]}
2020-03-29 16:21:13 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/favoritesList.jsp]
2020-03-29 16:21:13 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 16:21:16 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/video/toadd", parameters={}
2020-03-29 16:21:16 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.VideoController#toadd()
2020-03-29 16:21:16 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.TypeServiceImpl.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 16:21:16 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 16:21:16 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 16:21:16 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 16:21:16 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 16:21:16 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@281bf3b9]
2020-03-29 16:21:16 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 16:21:16 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from type 
2020-03-29 16:21:16 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-29 16:21:16 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 10
2020-03-29 16:21:16 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@281bf3b9]
2020-03-29 16:21:16 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@281bf3b9]
2020-03-29 16:21:16 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@281bf3b9]
2020-03-29 16:21:16 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@281bf3b9]
2020-03-29 16:21:16 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 16:21:16 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:21:16 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:21:16 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 16:21:16 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {typelist=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}, Type{tid=3, tname='生活'}, Type{tid=4, tname='美食'}, Type{tid=5, tname='财经'}, Type{tid=6, tname='数码'}, Type{tid=7, tname='科技'}, Type{tid=8, tname='鬼畜'}, Type{tid=9, tname='惊悚'}, Type{tid=10, tname='国创'}]}
2020-03-29 16:21:16 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/videoAdd.jsp]
2020-03-29 16:21:18 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 16:21:35 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/video/toadd", parameters={}
2020-03-29 16:21:35 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.VideoController#toadd()
2020-03-29 16:21:35 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.TypeServiceImpl.query]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 16:21:35 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 16:21:35 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 16:21:35 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 16:21:35 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 16:21:35 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52492283]
2020-03-29 16:21:35 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 16:21:35 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from type 
2020-03-29 16:21:35 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-29 16:21:35 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 10
2020-03-29 16:21:35 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52492283]
2020-03-29 16:21:35 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52492283]
2020-03-29 16:21:35 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52492283]
2020-03-29 16:21:35 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52492283]
2020-03-29 16:21:35 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 16:21:35 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:21:35 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:21:35 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 16:21:35 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {typelist=[Type{tid=1, tname='搞笑'}, Type{tid=2, tname='动作'}, Type{tid=3, tname='生活'}, Type{tid=4, tname='美食'}, Type{tid=5, tname='财经'}, Type{tid=6, tname='数码'}, Type{tid=7, tname='科技'}, Type{tid=8, tname='鬼畜'}, Type{tid=9, tname='惊悚'}, Type{tid=10, tname='国创'}]}
2020-03-29 16:21:35 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/videoAdd.jsp]
2020-03-29 16:21:35 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 16:39:03 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/videoManage/admin/login", parameters={masked}
2020-03-29 16:39:03 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.AdminController#login(User, HttpServletRequest)
2020-03-29 16:39:06 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.UserServiceImpl.adminLogin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 16:39:07 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 16:39:07 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 16:39:08 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 16:39:08 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26421d59]
2020-03-29 16:39:08 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 16:39:08 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from user u,power p where u.user_id = p.user_id and p.userpower_id = 1 and u.state = 1 and u.user_name = ? and u.password = ? 
2020-03-29 16:39:08 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: admin(String), admin(String)
2020-03-29 16:39:09 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 16:39:09 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26421d59]
2020-03-29 16:39:09 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26421d59]
2020-03-29 16:39:09 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26421d59]
2020-03-29 16:39:09 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26421d59]
2020-03-29 16:39:09 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 16:39:09 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:39:09 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 16:39:09 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {user=User{uid=null, uname='admin', password='admin', sex='null', phone='null', email='null', state=null, userPower=null}, org.springframework.validation.BindingResult.user=org.springframework.validation.BeanPropertyBindingResult: 0 errors, msg=登录成功！}
2020-03-29 16:39:09 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [../backStage/mainManage.jsp]
2020-03-29 16:39:24 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 16:39:24 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/style/common/global.css", parameters={}
2020-03-29 16:39:24 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/style/common/layui/layui.js", parameters={}
2020-03-29 16:39:24 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/style/common/layui/css/layui.css", parameters={}
2020-03-29 16:39:24 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 16:39:24 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 16:39:24 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 16:39:25 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/style/js/larry.js", parameters={}
2020-03-29 16:39:25 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 16:39:25 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/style/css/adminstyle.css", parameters={}
2020-03-29 16:39:25 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 16:39:25 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/style/js/index.js", parameters={}
2020-03-29 16:39:25 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 16:39:25 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 16:39:25 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 16:39:25 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 16:39:25 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 16:39:25 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 16:39:25 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 16:39:29 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/style/common/layui/lay/modules/jquery.js", parameters={}
2020-03-29 16:39:29 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 16:39:29 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 16:39:32 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/style/common/font/iconfont.woff?t=1480736048214", parameters={masked}
2020-03-29 16:39:32 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/style/common/font/fontawesome-webfont.woff2?v=4.7.0", parameters={masked}
2020-03-29 16:39:32 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 16:39:32 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 16:39:32 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 16:39:32 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 16:39:33 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/style/common/layui/lay/modules/element.js", parameters={}
2020-03-29 16:39:33 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 16:39:33 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 16:39:33 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/style/images/goods.jpg", parameters={}
2020-03-29 16:39:33 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 16:39:33 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 16:39:34 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/style/common/layui/lay/modules/layer.js", parameters={}
2020-03-29 16:39:34 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 16:39:34 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 16:39:35 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/style/common/layui/css/modules/layer/default/layer.css?v=3.0.11110", parameters={masked}
2020-03-29 16:39:35 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 16:39:35 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 304 NOT_MODIFIED
2020-03-29 16:39:35 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/js/navtab.js", parameters={}
2020-03-29 16:39:35 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 16:39:35 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 404 NOT_FOUND
2020-03-29 16:42:58 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/videoManage/admin/login", parameters={masked}
2020-03-29 16:42:58 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.AdminController#login(User, HttpServletRequest)
2020-03-29 16:42:58 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.UserServiceImpl.adminLogin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 16:42:58 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 16:42:58 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 16:42:58 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 16:42:58 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c16367c]
2020-03-29 16:42:58 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 16:42:58 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from user u,power p where u.user_id = p.user_id and p.userpower_id = 1 and u.state = 1 and u.user_name = ? and u.password = ? 
2020-03-29 16:42:58 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: admin(String), admin(String)
2020-03-29 16:42:58 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 16:42:58 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c16367c]
2020-03-29 16:42:58 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c16367c]
2020-03-29 16:42:58 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c16367c]
2020-03-29 16:42:58 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c16367c]
2020-03-29 16:42:58 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 16:42:58 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:42:58 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 16:42:58 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {user=User{uid=null, uname='admin', password='admin', sex='null', phone='null', email='null', state=null, userPower=null}, org.springframework.validation.BindingResult.user=org.springframework.validation.BeanPropertyBindingResult: 0 errors, msg=登录成功！}
2020-03-29 16:42:58 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [../backStage/mainManage.jsp]
2020-03-29 16:42:58 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 16:42:59 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/js/navtab.js", parameters={}
2020-03-29 16:42:59 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 16:42:59 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 404 NOT_FOUND
2020-03-29 16:43:00 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/style/images/m1.jpg", parameters={}
2020-03-29 16:43:00 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 16:43:00 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 404 NOT_FOUND
2020-03-29 16:43:10 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/videoManage/admin/login", parameters={masked}
2020-03-29 16:43:10 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.AdminController#login(User, HttpServletRequest)
2020-03-29 16:43:10 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.UserServiceImpl.adminLogin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 16:43:10 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 16:43:10 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 16:43:10 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 16:43:10 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cdf6954]
2020-03-29 16:43:10 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 16:43:10 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from user u,power p where u.user_id = p.user_id and p.userpower_id = 1 and u.state = 1 and u.user_name = ? and u.password = ? 
2020-03-29 16:43:10 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: admin(String), admin(String)
2020-03-29 16:43:10 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 16:43:10 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cdf6954]
2020-03-29 16:43:10 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cdf6954]
2020-03-29 16:43:10 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cdf6954]
2020-03-29 16:43:10 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cdf6954]
2020-03-29 16:43:10 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 16:43:10 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:43:10 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 16:43:10 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {user=User{uid=null, uname='admin', password='admin', sex='null', phone='null', email='null', state=null, userPower=null}, org.springframework.validation.BindingResult.user=org.springframework.validation.BeanPropertyBindingResult: 0 errors, msg=登录成功！}
2020-03-29 16:43:10 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [../backStage/mainManage.jsp]
2020-03-29 16:43:10 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 16:43:10 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/style/images/m1.jpg", parameters={}
2020-03-29 16:43:10 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 16:43:10 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 404 NOT_FOUND
2020-03-29 16:43:10 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/js/navtab.js", parameters={}
2020-03-29 16:43:10 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 16:43:10 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 404 NOT_FOUND
2020-03-29 16:43:37 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/videoManage/admin/login", parameters={masked}
2020-03-29 16:43:37 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.AdminController#login(User, HttpServletRequest)
2020-03-29 16:43:37 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.UserServiceImpl.adminLogin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 16:43:37 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 16:43:37 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 16:43:37 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 16:43:37 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f5d8b09]
2020-03-29 16:43:37 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 16:43:37 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from user u,power p where u.user_id = p.user_id and p.userpower_id = 1 and u.state = 1 and u.user_name = ? and u.password = ? 
2020-03-29 16:43:37 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: admin(String), admin(String)
2020-03-29 16:43:37 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 16:43:37 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f5d8b09]
2020-03-29 16:43:37 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f5d8b09]
2020-03-29 16:43:37 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f5d8b09]
2020-03-29 16:43:37 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f5d8b09]
2020-03-29 16:43:37 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 16:43:37 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:43:37 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 16:43:37 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {user=User{uid=null, uname='admin', password='admin', sex='null', phone='null', email='null', state=null, userPower=null}, org.springframework.validation.BindingResult.user=org.springframework.validation.BeanPropertyBindingResult: 0 errors, msg=登录成功！}
2020-03-29 16:43:37 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [../backStage/mainManage.jsp]
2020-03-29 16:43:37 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 16:43:38 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/style/images/m1.jpg", parameters={}
2020-03-29 16:43:38 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 16:43:38 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 404 NOT_FOUND
2020-03-29 16:43:38 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/js/navtab.js", parameters={}
2020-03-29 16:43:38 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 16:43:38 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 404 NOT_FOUND
2020-03-29 16:44:01 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/videoManage/admin/login", parameters={masked}
2020-03-29 16:44:01 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.AdminController#login(User, HttpServletRequest)
2020-03-29 16:44:01 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.UserServiceImpl.adminLogin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 16:44:01 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 16:44:01 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 16:44:01 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 16:44:01 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c5594f9]
2020-03-29 16:44:01 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 16:44:01 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from user u,power p where u.user_id = p.user_id and p.userpower_id = 1 and u.state = 1 and u.user_name = ? and u.password = ? 
2020-03-29 16:44:01 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: admin(String), admin(String)
2020-03-29 16:44:01 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 16:44:01 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c5594f9]
2020-03-29 16:44:01 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c5594f9]
2020-03-29 16:44:01 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c5594f9]
2020-03-29 16:44:01 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c5594f9]
2020-03-29 16:44:01 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 16:44:01 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:44:01 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 16:44:01 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {user=User{uid=null, uname='admin', password='admin', sex='null', phone='null', email='null', state=null, userPower=null}, org.springframework.validation.BindingResult.user=org.springframework.validation.BeanPropertyBindingResult: 0 errors, msg=登录成功！}
2020-03-29 16:44:01 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [../backStage/mainManage.jsp]
2020-03-29 16:44:01 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 16:44:02 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/js/navtab.js", parameters={}
2020-03-29 16:44:02 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 16:44:02 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 404 NOT_FOUND
2020-03-29 16:44:03 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/images/m1.jpg", parameters={}
2020-03-29 16:44:03 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler@2b60c1b3
2020-03-29 16:44:04 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 16:49:04 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/user/get/1", parameters={}
2020-03-29 16:49:04 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.UserController#get(Integer)
2020-03-29 16:49:05 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.UserServiceImpl.get]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2020-03-29 16:49:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 16:49:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.prepareConnectionForTransaction(DataSourceUtils.java:185) - Setting JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] read-only
2020-03-29 16:49:05 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 16:49:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 16:49:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45ba0ce4]
2020-03-29 16:49:05 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 16:49:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from user u,userpower up, power p where u.user_id = p.user_id and p.userpower_id = up.userpower_id and u.user_id = ? 
2020-03-29 16:49:05 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 1(Integer)
2020-03-29 16:49:06 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 16:49:06 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45ba0ce4]
2020-03-29 16:49:06 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45ba0ce4]
2020-03-29 16:49:06 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45ba0ce4]
2020-03-29 16:49:06 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45ba0ce4]
2020-03-29 16:49:06 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 16:49:06 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:49:06 [DEBUG]-org.springframework.jdbc.datasource.DataSourceUtils.resetConnectionAfterTransaction(DataSourceUtils.java:248) - Resetting read-only flag of JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 16:49:06 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 16:49:06 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {u=User{uid=1, uname='admin', password='admin', sex='男', phone='14739957027', email='admin@163.com', state=1, userPower=Power{uid=1, upid=1, old=null, startTime='2020-02-02', duration=99999999, upstate=1, power=UserPower{userPower_id=1, userPower_name='管理员'}}}, org.springframework.validation.BindingResult.u=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2020-03-29 16:49:07 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [/backStage/userDetail.jsp]
2020-03-29 16:49:17 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 17:02:48 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - GET "/videoManage/admin/query", parameters={}
2020-03-29 17:02:49 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.AdminController#query(User, String, Integer, Integer)
2020-03-29 17:02:55 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.UserServiceImpl.pageQuery]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 17:02:56 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 17:02:56 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 17:02:56 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 17:02:56 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@516a705]
2020-03-29 17:02:57 [DEBUG]-org.apache.ibatis.cache.decorators.LoggingCache.getObject(LoggingCache.java:60) - Cache Hit Ratio [SQL_CACHE]: 0.6666666666666666
2020-03-29 17:02:58 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 17:02:58 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: SELECT count(0) FROM user u, userpower up, power p WHERE u.user_id = p.user_id AND p.userpower_id = up.userpower_id 
2020-03-29 17:02:58 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-29 17:03:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 17:03:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select * from user u,userpower up, power p where u.user_id = p.user_id and p.userpower_id = up.userpower_id LIMIT ? 
2020-03-29 17:03:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 5(Integer)
2020-03-29 17:03:02 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 5
2020-03-29 17:03:02 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@516a705]
2020-03-29 17:03:03 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@516a705]
2020-03-29 17:03:03 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@516a705]
2020-03-29 17:03:03 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@516a705]
2020-03-29 17:03:03 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:741) - Initiating transaction commit
2020-03-29 17:03:03 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCommit(DataSourceTransactionManager.java:328) - Committing JDBC transaction on Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java]
2020-03-29 17:03:03 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:387) - Releasing JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] after transaction
2020-03-29 17:03:03 [DEBUG]-org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:309) - View name 'forward:', model {user=User{uid=null, uname='null', password='null', sex='null', phone='null', email='null', state=null, userPower=null}, org.springframework.validation.BindingResult.user=org.springframework.validation.BeanPropertyBindingResult: 0 errors, memoryName=null, p=PageInfo{pageNum=1, pageSize=5, size=5, startRow=1, endRow=5, total=9, pages=2, list=Page{count=true, pageNum=1, pageSize=5, startRow=0, endRow=5, total=9, pages=2, reasonable=false, pageSizeZero=false}[User{uid=1, uname='admin', password='admin', sex='男', phone='14739957027', email='admin@163.com', state=1, userPower=Power{uid=1, upid=1, old=null, startTime='2020-02-02', duration=99999999, upstate=1, power=UserPower{userPower_id=1, userPower_name='管理员'}}}, User{uid=2, uname='user1', password='user1', sex='null', phone='null', email='null', state=1, userPower=Power{uid=2, upid=3, old=null, startTime='2020-02-02', duration=180, upstate=2, power=UserPower{userPower_id=3, userPower_name='VIP'}}}, User{uid=3, uname='modTest', password='test', sex='null', phone='null', email='null', state=1, userPower=Power{uid=3, upid=4, old=null, startTime='2020-02-02', duration=180, upstate=1, power=UserPower{userPower_id=4, userPower_name='超级VIP'}}}, User{uid=12, uname='user2', password='user2', sex='男', phone='12345368259', email='1234567890@163.com', state=1, userPower=Power{uid=12, upid=2, old=null, startTime='2020-02-02', duration=180, upstate=1, power=UserPower{userPower_id=2, userPower_name='普通用户'}}}, User{uid=13, uname='user3', password='user3', sex='null', phone='123456', email='1234567890@163.com', state=1, userPower=Power{uid=13, upid=3, old=null, startTime='2020-02-02', duration=180, upstate=1, power=UserPower{userPower_id=3, userPower_name='VIP'}}}], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=2, navigatepageNums=[1, 2]}, org.springframework.validation.BindingResult.p=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
2020-03-29 17:03:03 [DEBUG]-org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:169) - Forwarding to [../backStage/userManage.jsp]
2020-03-29 17:03:11 [DEBUG]-org.springframework.web.servlet.FrameworkServlet.logResult(FrameworkServlet.java:1131) - Completed 200 OK
2020-03-29 17:03:25 [DEBUG]-org.springframework.core.log.LogFormatUtils.traceDebug(LogFormatUtils.java:91) - POST "/videoManage/admin/query", parameters={masked}
2020-03-29 17:03:25 [DEBUG]-org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:414) - Mapped to com.controller.AdminController#query(User, String, Integer, Integer)
2020-03-29 17:03:25 [DEBUG]-org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:370) - Creating new transaction with name [com.service.impl.UserServiceImpl.pageQueryAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2020-03-29 17:03:25 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:265) - Acquired Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] for JDBC transaction
2020-03-29 17:03:25 [DEBUG]-org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:283) - Switching JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] to manual commit
2020-03-29 17:03:25 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Creating a new SqlSession
2020-03-29 17:03:25 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74688895]
2020-03-29 17:03:26 [DEBUG]-org.apache.ibatis.cache.decorators.LoggingCache.getObject(LoggingCache.java:60) - Cache Hit Ratio [SQL_CACHE]: 0.6
2020-03-29 17:03:26 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - JDBC Connection [jdbc:mysql://127.0.0.1:3306/video?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT, UserName=root@localhost, MySQL Connector Java] will be managed by Spring
2020-03-29 17:03:26 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: SELECT count(0) FROM user 
2020-03-29 17:03:26 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 
2020-03-29 17:03:26 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 1
2020-03-29 17:03:26 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==>  Preparing: select user_id uid,user_name uname,password,sex,phone,email,state from user LIMIT ?, ? 
2020-03-29 17:03:26 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - ==> Parameters: 5(Integer), 5(Integer)
2020-03-29 17:03:26 [DEBUG]-org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) - <==      Total: 4
2020-03-29 17:03:26 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74688895]
2020-03-29 17:03:26 [DEBUG]-org.mybatis.logging.Logger.debug(Logger.java:49) - Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74688895]
